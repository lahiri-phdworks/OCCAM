// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Previrt.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Previrt.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace previrt {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* PrevirtType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrevirtType_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrevirtType_Int_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrevirtType_Int_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrevirtType_Vec_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrevirtType_Vec_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrevirtType_Str_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrevirtType_Str_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrevirtType_Float_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrevirtType_Float_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrevirtType_Global_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrevirtType_Global_reflection_ = NULL;
const ::google::protobuf::Descriptor* CallInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CallRewrite_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallRewrite_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentInterface_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentInterface_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentInterfaceTransform_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentInterfaceTransform_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionTree_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionTree_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionTree_Case_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionTree_Case_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionTree_Forward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionTree_Forward_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionTree_Event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionTree_Event_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnforceInterface_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnforceInterface_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnforceInterface_Functions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnforceInterface_Functions_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* FloatSemantics_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ActionType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Previrt_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Previrt_2eproto() {
  protobuf_AddDesc_Previrt_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Previrt.proto");
  GOOGLE_CHECK(file != NULL);
  PrevirtType_descriptor_ = file->message_type(0);
  static const int PrevirtType_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType, int__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType, vec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType, str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType, float__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType, global_),
  };
  PrevirtType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrevirtType_descriptor_,
      PrevirtType::default_instance_,
      PrevirtType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType, _has_bits_[0]),
      -1,
      -1,
      sizeof(PrevirtType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType, _internal_metadata_),
      -1);
  PrevirtType_Int_descriptor_ = PrevirtType_descriptor_->nested_type(0);
  static const int PrevirtType_Int_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Int, bits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Int, value_),
  };
  PrevirtType_Int_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrevirtType_Int_descriptor_,
      PrevirtType_Int::default_instance_,
      PrevirtType_Int_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Int, _has_bits_[0]),
      -1,
      -1,
      sizeof(PrevirtType_Int),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Int, _internal_metadata_),
      -1);
  PrevirtType_Vec_descriptor_ = PrevirtType_descriptor_->nested_type(1);
  static const int PrevirtType_Vec_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Vec, elems_),
  };
  PrevirtType_Vec_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrevirtType_Vec_descriptor_,
      PrevirtType_Vec::default_instance_,
      PrevirtType_Vec_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Vec, _has_bits_[0]),
      -1,
      -1,
      sizeof(PrevirtType_Vec),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Vec, _internal_metadata_),
      -1);
  PrevirtType_Str_descriptor_ = PrevirtType_descriptor_->nested_type(2);
  static const int PrevirtType_Str_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Str, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Str, cstr_),
  };
  PrevirtType_Str_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrevirtType_Str_descriptor_,
      PrevirtType_Str::default_instance_,
      PrevirtType_Str_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Str, _has_bits_[0]),
      -1,
      -1,
      sizeof(PrevirtType_Str),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Str, _internal_metadata_),
      -1);
  PrevirtType_Float_descriptor_ = PrevirtType_descriptor_->nested_type(3);
  static const int PrevirtType_Float_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Float, sem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Float, data_),
  };
  PrevirtType_Float_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrevirtType_Float_descriptor_,
      PrevirtType_Float::default_instance_,
      PrevirtType_Float_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Float, _has_bits_[0]),
      -1,
      -1,
      sizeof(PrevirtType_Float),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Float, _internal_metadata_),
      -1);
  PrevirtType_Global_descriptor_ = PrevirtType_descriptor_->nested_type(4);
  static const int PrevirtType_Global_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Global, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Global, is_const_),
  };
  PrevirtType_Global_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrevirtType_Global_descriptor_,
      PrevirtType_Global::default_instance_,
      PrevirtType_Global_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Global, _has_bits_[0]),
      -1,
      -1,
      sizeof(PrevirtType_Global),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrevirtType_Global, _internal_metadata_),
      -1);
  CallInfo_descriptor_ = file->message_type(1);
  static const int CallInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallInfo, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallInfo, args_),
  };
  CallInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CallInfo_descriptor_,
      CallInfo::default_instance_,
      CallInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CallInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallInfo, _internal_metadata_),
      -1);
  CallRewrite_descriptor_ = file->message_type(2);
  static const int CallRewrite_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRewrite, call_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRewrite, new_function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRewrite, args_),
  };
  CallRewrite_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CallRewrite_descriptor_,
      CallRewrite::default_instance_,
      CallRewrite_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRewrite, _has_bits_[0]),
      -1,
      -1,
      sizeof(CallRewrite),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallRewrite, _internal_metadata_),
      -1);
  ComponentInterface_descriptor_ = file->message_type(3);
  static const int ComponentInterface_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInterface, calls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInterface, definitions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInterface, globals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInterface, references_),
  };
  ComponentInterface_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ComponentInterface_descriptor_,
      ComponentInterface::default_instance_,
      ComponentInterface_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInterface, _has_bits_[0]),
      -1,
      -1,
      sizeof(ComponentInterface),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInterface, _internal_metadata_),
      -1);
  ComponentInterfaceTransform_descriptor_ = file->message_type(4);
  static const int ComponentInterfaceTransform_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInterfaceTransform, calls_),
  };
  ComponentInterfaceTransform_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ComponentInterfaceTransform_descriptor_,
      ComponentInterfaceTransform::default_instance_,
      ComponentInterfaceTransform_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInterfaceTransform, _has_bits_[0]),
      -1,
      -1,
      sizeof(ComponentInterfaceTransform),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentInterfaceTransform, _internal_metadata_),
      -1);
  ActionTree_descriptor_ = file->message_type(5);
  static const int ActionTree_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree, case__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree, forward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree, event_),
  };
  ActionTree_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActionTree_descriptor_,
      ActionTree::default_instance_,
      ActionTree_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree, _has_bits_[0]),
      -1,
      -1,
      sizeof(ActionTree),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree, _internal_metadata_),
      -1);
  ActionTree_Case_descriptor_ = ActionTree_descriptor_->nested_type(0);
  static const int ActionTree_Case_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Case, var_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Case, test_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Case, _then_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Case, _else_),
  };
  ActionTree_Case_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActionTree_Case_descriptor_,
      ActionTree_Case::default_instance_,
      ActionTree_Case_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Case, _has_bits_[0]),
      -1,
      -1,
      sizeof(ActionTree_Case),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Case, _internal_metadata_),
      -1);
  ActionTree_Forward_descriptor_ = ActionTree_descriptor_->nested_type(1);
  static const int ActionTree_Forward_offsets_[1] = {
  };
  ActionTree_Forward_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActionTree_Forward_descriptor_,
      ActionTree_Forward::default_instance_,
      ActionTree_Forward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Forward, _has_bits_[0]),
      -1,
      -1,
      sizeof(ActionTree_Forward),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Forward, _internal_metadata_),
      -1);
  ActionTree_Event_descriptor_ = ActionTree_descriptor_->nested_type(2);
  static const int ActionTree_Event_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Event, exit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Event, handler_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Event, args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Event, then_),
  };
  ActionTree_Event_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActionTree_Event_descriptor_,
      ActionTree_Event::default_instance_,
      ActionTree_Event_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Event, _has_bits_[0]),
      -1,
      -1,
      sizeof(ActionTree_Event),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTree_Event, _internal_metadata_),
      -1);
  EnforceInterface_descriptor_ = file->message_type(6);
  static const int EnforceInterface_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnforceInterface, functions_),
  };
  EnforceInterface_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnforceInterface_descriptor_,
      EnforceInterface::default_instance_,
      EnforceInterface_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnforceInterface, _has_bits_[0]),
      -1,
      -1,
      sizeof(EnforceInterface),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnforceInterface, _internal_metadata_),
      -1);
  EnforceInterface_Functions_descriptor_ = EnforceInterface_descriptor_->nested_type(0);
  static const int EnforceInterface_Functions_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnforceInterface_Functions, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnforceInterface_Functions, actions_),
  };
  EnforceInterface_Functions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnforceInterface_Functions_descriptor_,
      EnforceInterface_Functions::default_instance_,
      EnforceInterface_Functions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnforceInterface_Functions, _has_bits_[0]),
      -1,
      -1,
      sizeof(EnforceInterface_Functions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnforceInterface_Functions, _internal_metadata_),
      -1);
  Type_descriptor_ = file->enum_type(0);
  FloatSemantics_descriptor_ = file->enum_type(1);
  ActionType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Previrt_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrevirtType_descriptor_, &PrevirtType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrevirtType_Int_descriptor_, &PrevirtType_Int::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrevirtType_Vec_descriptor_, &PrevirtType_Vec::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrevirtType_Str_descriptor_, &PrevirtType_Str::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrevirtType_Float_descriptor_, &PrevirtType_Float::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrevirtType_Global_descriptor_, &PrevirtType_Global::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CallInfo_descriptor_, &CallInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CallRewrite_descriptor_, &CallRewrite::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ComponentInterface_descriptor_, &ComponentInterface::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ComponentInterfaceTransform_descriptor_, &ComponentInterfaceTransform::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActionTree_descriptor_, &ActionTree::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActionTree_Case_descriptor_, &ActionTree_Case::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActionTree_Forward_descriptor_, &ActionTree_Forward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActionTree_Event_descriptor_, &ActionTree_Event::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnforceInterface_descriptor_, &EnforceInterface::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnforceInterface_Functions_descriptor_, &EnforceInterface_Functions::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Previrt_2eproto() {
  delete PrevirtType::default_instance_;
  delete PrevirtType_reflection_;
  delete PrevirtType_Int::default_instance_;
  delete PrevirtType_Int_reflection_;
  delete PrevirtType_Vec::default_instance_;
  delete PrevirtType_Vec_reflection_;
  delete PrevirtType_Str::default_instance_;
  delete PrevirtType_Str_reflection_;
  delete PrevirtType_Float::default_instance_;
  delete PrevirtType_Float_reflection_;
  delete PrevirtType_Global::default_instance_;
  delete PrevirtType_Global_reflection_;
  delete CallInfo::default_instance_;
  delete CallInfo_reflection_;
  delete CallRewrite::default_instance_;
  delete CallRewrite_reflection_;
  delete ComponentInterface::default_instance_;
  delete ComponentInterface_reflection_;
  delete ComponentInterfaceTransform::default_instance_;
  delete ComponentInterfaceTransform_reflection_;
  delete ActionTree::default_instance_;
  delete ActionTree_reflection_;
  delete ActionTree_Case::default_instance_;
  delete ActionTree_Case_reflection_;
  delete ActionTree_Forward::default_instance_;
  delete ActionTree_Forward_reflection_;
  delete ActionTree_Event::default_instance_;
  delete ActionTree_Event_reflection_;
  delete EnforceInterface::default_instance_;
  delete EnforceInterface_reflection_;
  delete EnforceInterface_Functions::default_instance_;
  delete EnforceInterface_Functions_reflection_;
}

void protobuf_AddDesc_Previrt_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_Previrt_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rPrevirt.proto\022\rprevirt.proto\"\216\004\n\013Previ"
    "rtType\022!\n\004type\030\001 \002(\0162\023.previrt.proto.Typ"
    "e\022+\n\003int\030\n \001(\n2\036.previrt.proto.PrevirtTy"
    "pe.Int\022+\n\003vec\030\024 \001(\n2\036.previrt.proto.Prev"
    "irtType.Vec\022+\n\003str\030\036 \001(\n2\036.previrt.proto"
    ".PrevirtType.Str\022/\n\005float\030( \001(\n2 .previr"
    "t.proto.PrevirtType.Float\0221\n\006global\0302 \001("
    "\n2!.previrt.proto.PrevirtType.Global\032\"\n\003"
    "Int\022\014\n\004bits\030\002 \002(\r\022\r\n\005value\030\003 \001(\t\0320\n\003Vec\022"
    ")\n\005elems\030\025 \003(\0132\032.previrt.proto.PrevirtTy"
    "pe\032\'\n\003Str\022\014\n\004data\030\037 \001(\014\022\022\n\004cstr\030  \001(\010:\004t"
    "rue\032A\n\005Float\022*\n\003sem\030) \002(\0162\035.previrt.prot"
    "o.FloatSemantics\022\014\n\004data\030* \001(\t\032/\n\006Global"
    "\022\014\n\004name\0303 \002(\014\022\027\n\010is_const\0304 \001(\010:\005false\""
    "T\n\010CallInfo\022\014\n\004name\030\001 \002(\014\022\020\n\005count\030\002 \001(\r"
    ":\0011\022(\n\004args\030\003 \003(\0132\032.previrt.proto.Previr"
    "tType\"\\\n\013CallRewrite\022%\n\004call\030\001 \002(\0132\027.pre"
    "virt.proto.CallInfo\022\024\n\014new_function\030\002 \002("
    "\014\022\020\n\004args\030\003 \003(\005B\002\020\001\"\253\001\n\022ComponentInterfa"
    "ce\022&\n\005calls\030\001 \003(\0132\027.previrt.proto.CallIn"
    "fo\022,\n\013definitions\030\002 \003(\0132\027.previrt.proto."
    "CallInfo\022+\n\007globals\030\003 \003(\0132\032.previrt.prot"
    "o.PrevirtType\022\022\n\nreferences\030\004 \003(\014\"H\n\033Com"
    "ponentInterfaceTransform\022)\n\005calls\030\001 \003(\0132"
    "\032.previrt.proto.CallRewrite\"\314\003\n\nActionTr"
    "ee\022\'\n\004type\030\001 \002(\0162\031.previrt.proto.ActionT"
    "ype\022,\n\004case\030\n \001(\n2\036.previrt.proto.Action"
    "Tree.Case\0222\n\007forward\030\024 \001(\n2!.previrt.pro"
    "to.ActionTree.Forward\022.\n\005event\030\036 \001(\n2\037.p"
    "revirt.proto.ActionTree.Event\032\221\001\n\004Case\022\013"
    "\n\003var\030\013 \002(\005\022(\n\004test\030\014 \002(\0132\032.previrt.prot"
    "o.PrevirtType\022(\n\005_then\030\022 \002(\0132\031.previrt.p"
    "roto.ActionTree\022(\n\005_else\030\023 \002(\0132\031.previrt"
    ".proto.ActionTree\032\t\n\007Forward\032d\n\005Event\022\023\n"
    "\004exit\030\037 \001(\010:\005false\022\017\n\007handler\030  \001(\014\022\014\n\004a"
    "rgs\030! \003(\005\022\'\n\004then\030\' \001(\0132\031.previrt.proto."
    "ActionTree\"\227\001\n\020EnforceInterface\022<\n\tfunct"
    "ions\030\001 \003(\n2).previrt.proto.EnforceInterf"
    "ace.Functions\032E\n\tFunctions\022\014\n\004name\030\002 \002(\014"
    "\022*\n\007actions\030\003 \002(\0132\031.previrt.proto.Action"
    "Tree*7\n\004Type\022\005\n\001U\020\000\022\005\n\001I\020\001\022\005\n\001F\020\002\022\005\n\001S\020\003"
    "\022\005\n\001V\020\004\022\005\n\001N\020\005\022\005\n\001G\020\006*\203\001\n\016FloatSemantics"
    "\022\014\n\010IEEEhalf\020\001\022\016\n\nIEEEsingle\020\002\022\016\n\nIEEEdo"
    "uble\020\003\022\014\n\010IEEEquad\020\004\022\025\n\021x87DoubleExtende"
    "d\020\005\022\t\n\005Bogus\020\006\022\023\n\017PPCDoubleDouble\020\007*8\n\nA"
    "ctionType\022\010\n\004CASE\020\001\022\013\n\007FORWARD\020\002\022\t\n\005EVEN"
    "T\020\003\022\010\n\004FAIL\020\004", 1853);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Previrt.proto", &protobuf_RegisterTypes);
  PrevirtType::default_instance_ = new PrevirtType();
  PrevirtType_Int::default_instance_ = new PrevirtType_Int();
  PrevirtType_Vec::default_instance_ = new PrevirtType_Vec();
  PrevirtType_Str::default_instance_ = new PrevirtType_Str();
  PrevirtType_Float::default_instance_ = new PrevirtType_Float();
  PrevirtType_Global::default_instance_ = new PrevirtType_Global();
  CallInfo::default_instance_ = new CallInfo();
  CallRewrite::default_instance_ = new CallRewrite();
  ComponentInterface::default_instance_ = new ComponentInterface();
  ComponentInterfaceTransform::default_instance_ = new ComponentInterfaceTransform();
  ActionTree::default_instance_ = new ActionTree();
  ActionTree_Case::default_instance_ = new ActionTree_Case();
  ActionTree_Forward::default_instance_ = new ActionTree_Forward();
  ActionTree_Event::default_instance_ = new ActionTree_Event();
  EnforceInterface::default_instance_ = new EnforceInterface();
  EnforceInterface_Functions::default_instance_ = new EnforceInterface_Functions();
  PrevirtType::default_instance_->InitAsDefaultInstance();
  PrevirtType_Int::default_instance_->InitAsDefaultInstance();
  PrevirtType_Vec::default_instance_->InitAsDefaultInstance();
  PrevirtType_Str::default_instance_->InitAsDefaultInstance();
  PrevirtType_Float::default_instance_->InitAsDefaultInstance();
  PrevirtType_Global::default_instance_->InitAsDefaultInstance();
  CallInfo::default_instance_->InitAsDefaultInstance();
  CallRewrite::default_instance_->InitAsDefaultInstance();
  ComponentInterface::default_instance_->InitAsDefaultInstance();
  ComponentInterfaceTransform::default_instance_->InitAsDefaultInstance();
  ActionTree::default_instance_->InitAsDefaultInstance();
  ActionTree_Case::default_instance_->InitAsDefaultInstance();
  ActionTree_Forward::default_instance_->InitAsDefaultInstance();
  ActionTree_Event::default_instance_->InitAsDefaultInstance();
  EnforceInterface::default_instance_->InitAsDefaultInstance();
  EnforceInterface_Functions::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Previrt_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Previrt_2eproto {
  StaticDescriptorInitializer_Previrt_2eproto() {
    protobuf_AddDesc_Previrt_2eproto();
  }
} static_descriptor_initializer_Previrt_2eproto_;
const ::google::protobuf::EnumDescriptor* Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type_descriptor_;
}
bool Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FloatSemantics_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FloatSemantics_descriptor_;
}
bool FloatSemantics_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ActionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionType_descriptor_;
}
bool ActionType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrevirtType_Int::kBitsFieldNumber;
const int PrevirtType_Int::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrevirtType_Int::PrevirtType_Int()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.PrevirtType.Int)
}

void PrevirtType_Int::InitAsDefaultInstance() {
}

PrevirtType_Int::PrevirtType_Int(const PrevirtType_Int& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.PrevirtType.Int)
}

void PrevirtType_Int::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bits_ = 0u;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrevirtType_Int::~PrevirtType_Int() {
  // @@protoc_insertion_point(destructor:previrt.proto.PrevirtType.Int)
  SharedDtor();
}

void PrevirtType_Int::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PrevirtType_Int::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrevirtType_Int::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrevirtType_Int_descriptor_;
}

const PrevirtType_Int& PrevirtType_Int::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

PrevirtType_Int* PrevirtType_Int::default_instance_ = NULL;

PrevirtType_Int* PrevirtType_Int::New(::google::protobuf::Arena* arena) const {
  PrevirtType_Int* n = new PrevirtType_Int;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrevirtType_Int::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.PrevirtType.Int)
  if (_has_bits_[0 / 32] & 3u) {
    bits_ = 0u;
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PrevirtType_Int::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.PrevirtType.Int)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 bits = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bits_)));
          set_has_bits();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional string value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "previrt.proto.PrevirtType.Int.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.PrevirtType.Int)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.PrevirtType.Int)
  return false;
#undef DO_
}

void PrevirtType_Int::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.PrevirtType.Int)
  // required uint32 bits = 2;
  if (has_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bits(), output);
  }

  // optional string value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "previrt.proto.PrevirtType.Int.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.PrevirtType.Int)
}

::google::protobuf::uint8* PrevirtType_Int::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.PrevirtType.Int)
  // required uint32 bits = 2;
  if (has_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bits(), target);
  }

  // optional string value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "previrt.proto.PrevirtType.Int.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.PrevirtType.Int)
  return target;
}

int PrevirtType_Int::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.PrevirtType.Int)
  int total_size = 0;

  // required uint32 bits = 2;
  if (has_bits()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bits());
  }
  // optional string value = 3;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrevirtType_Int::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.PrevirtType.Int)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PrevirtType_Int* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrevirtType_Int>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.PrevirtType.Int)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.PrevirtType.Int)
    MergeFrom(*source);
  }
}

void PrevirtType_Int::MergeFrom(const PrevirtType_Int& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.PrevirtType.Int)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bits()) {
      set_bits(from.bits());
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PrevirtType_Int::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.PrevirtType.Int)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrevirtType_Int::CopyFrom(const PrevirtType_Int& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.PrevirtType.Int)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrevirtType_Int::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PrevirtType_Int::Swap(PrevirtType_Int* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrevirtType_Int::InternalSwap(PrevirtType_Int* other) {
  std::swap(bits_, other->bits_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrevirtType_Int::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrevirtType_Int_descriptor_;
  metadata.reflection = PrevirtType_Int_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrevirtType_Vec::kElemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrevirtType_Vec::PrevirtType_Vec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.PrevirtType.Vec)
}

void PrevirtType_Vec::InitAsDefaultInstance() {
}

PrevirtType_Vec::PrevirtType_Vec(const PrevirtType_Vec& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.PrevirtType.Vec)
}

void PrevirtType_Vec::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrevirtType_Vec::~PrevirtType_Vec() {
  // @@protoc_insertion_point(destructor:previrt.proto.PrevirtType.Vec)
  SharedDtor();
}

void PrevirtType_Vec::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PrevirtType_Vec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrevirtType_Vec::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrevirtType_Vec_descriptor_;
}

const PrevirtType_Vec& PrevirtType_Vec::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

PrevirtType_Vec* PrevirtType_Vec::default_instance_ = NULL;

PrevirtType_Vec* PrevirtType_Vec::New(::google::protobuf::Arena* arena) const {
  PrevirtType_Vec* n = new PrevirtType_Vec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrevirtType_Vec::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.PrevirtType.Vec)
  elems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PrevirtType_Vec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.PrevirtType.Vec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .previrt.proto.PrevirtType elems = 21;
      case 21: {
        if (tag == 170) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_elems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_elems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_loop_elems;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.PrevirtType.Vec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.PrevirtType.Vec)
  return false;
#undef DO_
}

void PrevirtType_Vec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.PrevirtType.Vec)
  // repeated .previrt.proto.PrevirtType elems = 21;
  for (unsigned int i = 0, n = this->elems_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->elems(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.PrevirtType.Vec)
}

::google::protobuf::uint8* PrevirtType_Vec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.PrevirtType.Vec)
  // repeated .previrt.proto.PrevirtType elems = 21;
  for (unsigned int i = 0, n = this->elems_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, this->elems(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.PrevirtType.Vec)
  return target;
}

int PrevirtType_Vec::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.PrevirtType.Vec)
  int total_size = 0;

  // repeated .previrt.proto.PrevirtType elems = 21;
  total_size += 2 * this->elems_size();
  for (int i = 0; i < this->elems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->elems(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrevirtType_Vec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.PrevirtType.Vec)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PrevirtType_Vec* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrevirtType_Vec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.PrevirtType.Vec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.PrevirtType.Vec)
    MergeFrom(*source);
  }
}

void PrevirtType_Vec::MergeFrom(const PrevirtType_Vec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.PrevirtType.Vec)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  elems_.MergeFrom(from.elems_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PrevirtType_Vec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.PrevirtType.Vec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrevirtType_Vec::CopyFrom(const PrevirtType_Vec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.PrevirtType.Vec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrevirtType_Vec::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->elems())) return false;
  return true;
}

void PrevirtType_Vec::Swap(PrevirtType_Vec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrevirtType_Vec::InternalSwap(PrevirtType_Vec* other) {
  elems_.UnsafeArenaSwap(&other->elems_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrevirtType_Vec::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrevirtType_Vec_descriptor_;
  metadata.reflection = PrevirtType_Vec_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrevirtType_Str::kDataFieldNumber;
const int PrevirtType_Str::kCstrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrevirtType_Str::PrevirtType_Str()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.PrevirtType.Str)
}

void PrevirtType_Str::InitAsDefaultInstance() {
}

PrevirtType_Str::PrevirtType_Str(const PrevirtType_Str& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.PrevirtType.Str)
}

void PrevirtType_Str::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cstr_ = true;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrevirtType_Str::~PrevirtType_Str() {
  // @@protoc_insertion_point(destructor:previrt.proto.PrevirtType.Str)
  SharedDtor();
}

void PrevirtType_Str::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PrevirtType_Str::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrevirtType_Str::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrevirtType_Str_descriptor_;
}

const PrevirtType_Str& PrevirtType_Str::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

PrevirtType_Str* PrevirtType_Str::default_instance_ = NULL;

PrevirtType_Str* PrevirtType_Str::New(::google::protobuf::Arena* arena) const {
  PrevirtType_Str* n = new PrevirtType_Str;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrevirtType_Str::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.PrevirtType.Str)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    cstr_ = true;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PrevirtType_Str::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.PrevirtType.Str)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 31;
      case 31: {
        if (tag == 250) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_cstr;
        break;
      }

      // optional bool cstr = 32 [default = true];
      case 32: {
        if (tag == 256) {
         parse_cstr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cstr_)));
          set_has_cstr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.PrevirtType.Str)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.PrevirtType.Str)
  return false;
#undef DO_
}

void PrevirtType_Str::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.PrevirtType.Str)
  // optional bytes data = 31;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      31, this->data(), output);
  }

  // optional bool cstr = 32 [default = true];
  if (has_cstr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(32, this->cstr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.PrevirtType.Str)
}

::google::protobuf::uint8* PrevirtType_Str::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.PrevirtType.Str)
  // optional bytes data = 31;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        31, this->data(), target);
  }

  // optional bool cstr = 32 [default = true];
  if (has_cstr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(32, this->cstr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.PrevirtType.Str)
  return target;
}

int PrevirtType_Str::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.PrevirtType.Str)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes data = 31;
    if (has_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional bool cstr = 32 [default = true];
    if (has_cstr()) {
      total_size += 2 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrevirtType_Str::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.PrevirtType.Str)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PrevirtType_Str* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrevirtType_Str>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.PrevirtType.Str)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.PrevirtType.Str)
    MergeFrom(*source);
  }
}

void PrevirtType_Str::MergeFrom(const PrevirtType_Str& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.PrevirtType.Str)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (from.has_cstr()) {
      set_cstr(from.cstr());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PrevirtType_Str::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.PrevirtType.Str)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrevirtType_Str::CopyFrom(const PrevirtType_Str& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.PrevirtType.Str)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrevirtType_Str::IsInitialized() const {

  return true;
}

void PrevirtType_Str::Swap(PrevirtType_Str* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrevirtType_Str::InternalSwap(PrevirtType_Str* other) {
  data_.Swap(&other->data_);
  std::swap(cstr_, other->cstr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrevirtType_Str::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrevirtType_Str_descriptor_;
  metadata.reflection = PrevirtType_Str_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrevirtType_Float::kSemFieldNumber;
const int PrevirtType_Float::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrevirtType_Float::PrevirtType_Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.PrevirtType.Float)
}

void PrevirtType_Float::InitAsDefaultInstance() {
}

PrevirtType_Float::PrevirtType_Float(const PrevirtType_Float& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.PrevirtType.Float)
}

void PrevirtType_Float::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sem_ = 1;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrevirtType_Float::~PrevirtType_Float() {
  // @@protoc_insertion_point(destructor:previrt.proto.PrevirtType.Float)
  SharedDtor();
}

void PrevirtType_Float::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PrevirtType_Float::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrevirtType_Float::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrevirtType_Float_descriptor_;
}

const PrevirtType_Float& PrevirtType_Float::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

PrevirtType_Float* PrevirtType_Float::default_instance_ = NULL;

PrevirtType_Float* PrevirtType_Float::New(::google::protobuf::Arena* arena) const {
  PrevirtType_Float* n = new PrevirtType_Float;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrevirtType_Float::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.PrevirtType.Float)
  if (_has_bits_[0 / 32] & 3u) {
    sem_ = 1;
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PrevirtType_Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.PrevirtType.Float)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .previrt.proto.FloatSemantics sem = 41;
      case 41: {
        if (tag == 328) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::previrt::proto::FloatSemantics_IsValid(value)) {
            set_sem(static_cast< ::previrt::proto::FloatSemantics >(value));
          } else {
            mutable_unknown_fields()->AddVarint(41, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_data;
        break;
      }

      // optional string data = 42;
      case 42: {
        if (tag == 338) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "previrt.proto.PrevirtType.Float.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.PrevirtType.Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.PrevirtType.Float)
  return false;
#undef DO_
}

void PrevirtType_Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.PrevirtType.Float)
  // required .previrt.proto.FloatSemantics sem = 41;
  if (has_sem()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      41, this->sem(), output);
  }

  // optional string data = 42;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "previrt.proto.PrevirtType.Float.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      42, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.PrevirtType.Float)
}

::google::protobuf::uint8* PrevirtType_Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.PrevirtType.Float)
  // required .previrt.proto.FloatSemantics sem = 41;
  if (has_sem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      41, this->sem(), target);
  }

  // optional string data = 42;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "previrt.proto.PrevirtType.Float.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.PrevirtType.Float)
  return target;
}

int PrevirtType_Float::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.PrevirtType.Float)
  int total_size = 0;

  // required .previrt.proto.FloatSemantics sem = 41;
  if (has_sem()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sem());
  }
  // optional string data = 42;
  if (has_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrevirtType_Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.PrevirtType.Float)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PrevirtType_Float* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrevirtType_Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.PrevirtType.Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.PrevirtType.Float)
    MergeFrom(*source);
  }
}

void PrevirtType_Float::MergeFrom(const PrevirtType_Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.PrevirtType.Float)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sem()) {
      set_sem(from.sem());
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PrevirtType_Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.PrevirtType.Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrevirtType_Float::CopyFrom(const PrevirtType_Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.PrevirtType.Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrevirtType_Float::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PrevirtType_Float::Swap(PrevirtType_Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrevirtType_Float::InternalSwap(PrevirtType_Float* other) {
  std::swap(sem_, other->sem_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrevirtType_Float::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrevirtType_Float_descriptor_;
  metadata.reflection = PrevirtType_Float_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrevirtType_Global::kNameFieldNumber;
const int PrevirtType_Global::kIsConstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrevirtType_Global::PrevirtType_Global()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.PrevirtType.Global)
}

void PrevirtType_Global::InitAsDefaultInstance() {
}

PrevirtType_Global::PrevirtType_Global(const PrevirtType_Global& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.PrevirtType.Global)
}

void PrevirtType_Global::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_const_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrevirtType_Global::~PrevirtType_Global() {
  // @@protoc_insertion_point(destructor:previrt.proto.PrevirtType.Global)
  SharedDtor();
}

void PrevirtType_Global::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PrevirtType_Global::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrevirtType_Global::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrevirtType_Global_descriptor_;
}

const PrevirtType_Global& PrevirtType_Global::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

PrevirtType_Global* PrevirtType_Global::default_instance_ = NULL;

PrevirtType_Global* PrevirtType_Global::New(::google::protobuf::Arena* arena) const {
  PrevirtType_Global* n = new PrevirtType_Global;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrevirtType_Global::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.PrevirtType.Global)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    is_const_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PrevirtType_Global::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.PrevirtType.Global)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 51;
      case 51: {
        if (tag == 410) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(416)) goto parse_is_const;
        break;
      }

      // optional bool is_const = 52 [default = false];
      case 52: {
        if (tag == 416) {
         parse_is_const:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_const_)));
          set_has_is_const();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.PrevirtType.Global)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.PrevirtType.Global)
  return false;
#undef DO_
}

void PrevirtType_Global::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.PrevirtType.Global)
  // required bytes name = 51;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      51, this->name(), output);
  }

  // optional bool is_const = 52 [default = false];
  if (has_is_const()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(52, this->is_const(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.PrevirtType.Global)
}

::google::protobuf::uint8* PrevirtType_Global::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.PrevirtType.Global)
  // required bytes name = 51;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        51, this->name(), target);
  }

  // optional bool is_const = 52 [default = false];
  if (has_is_const()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(52, this->is_const(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.PrevirtType.Global)
  return target;
}

int PrevirtType_Global::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.PrevirtType.Global)
  int total_size = 0;

  // required bytes name = 51;
  if (has_name()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }
  // optional bool is_const = 52 [default = false];
  if (has_is_const()) {
    total_size += 2 + 1;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrevirtType_Global::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.PrevirtType.Global)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PrevirtType_Global* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrevirtType_Global>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.PrevirtType.Global)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.PrevirtType.Global)
    MergeFrom(*source);
  }
}

void PrevirtType_Global::MergeFrom(const PrevirtType_Global& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.PrevirtType.Global)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_is_const()) {
      set_is_const(from.is_const());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PrevirtType_Global::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.PrevirtType.Global)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrevirtType_Global::CopyFrom(const PrevirtType_Global& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.PrevirtType.Global)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrevirtType_Global::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PrevirtType_Global::Swap(PrevirtType_Global* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrevirtType_Global::InternalSwap(PrevirtType_Global* other) {
  name_.Swap(&other->name_);
  std::swap(is_const_, other->is_const_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrevirtType_Global::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrevirtType_Global_descriptor_;
  metadata.reflection = PrevirtType_Global_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrevirtType::kTypeFieldNumber;
const int PrevirtType::kIntFieldNumber;
const int PrevirtType::kVecFieldNumber;
const int PrevirtType::kStrFieldNumber;
const int PrevirtType::kFloatFieldNumber;
const int PrevirtType::kGlobalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrevirtType::PrevirtType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.PrevirtType)
}

void PrevirtType::InitAsDefaultInstance() {
  int__ = const_cast< ::previrt::proto::PrevirtType_Int*>(&::previrt::proto::PrevirtType_Int::default_instance());
  vec_ = const_cast< ::previrt::proto::PrevirtType_Vec*>(&::previrt::proto::PrevirtType_Vec::default_instance());
  str_ = const_cast< ::previrt::proto::PrevirtType_Str*>(&::previrt::proto::PrevirtType_Str::default_instance());
  float__ = const_cast< ::previrt::proto::PrevirtType_Float*>(&::previrt::proto::PrevirtType_Float::default_instance());
  global_ = const_cast< ::previrt::proto::PrevirtType_Global*>(&::previrt::proto::PrevirtType_Global::default_instance());
}

PrevirtType::PrevirtType(const PrevirtType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.PrevirtType)
}

void PrevirtType::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  int__ = NULL;
  vec_ = NULL;
  str_ = NULL;
  float__ = NULL;
  global_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrevirtType::~PrevirtType() {
  // @@protoc_insertion_point(destructor:previrt.proto.PrevirtType)
  SharedDtor();
}

void PrevirtType::SharedDtor() {
  if (this != default_instance_) {
    delete int__;
    delete vec_;
    delete str_;
    delete float__;
    delete global_;
  }
}

void PrevirtType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrevirtType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrevirtType_descriptor_;
}

const PrevirtType& PrevirtType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

PrevirtType* PrevirtType::default_instance_ = NULL;

PrevirtType* PrevirtType::New(::google::protobuf::Arena* arena) const {
  PrevirtType* n = new PrevirtType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrevirtType::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.PrevirtType)
  if (_has_bits_[0 / 32] & 63u) {
    type_ = 0;
    if (has_int_()) {
      if (int__ != NULL) int__->::previrt::proto::PrevirtType_Int::Clear();
    }
    if (has_vec()) {
      if (vec_ != NULL) vec_->::previrt::proto::PrevirtType_Vec::Clear();
    }
    if (has_str()) {
      if (str_ != NULL) str_->::previrt::proto::PrevirtType_Str::Clear();
    }
    if (has_float_()) {
      if (float__ != NULL) float__->::previrt::proto::PrevirtType_Float::Clear();
    }
    if (has_global()) {
      if (global_ != NULL) global_->::previrt::proto::PrevirtType_Global::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PrevirtType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.PrevirtType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .previrt.proto.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::previrt::proto::Type_IsValid(value)) {
            set_type(static_cast< ::previrt::proto::Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(83)) goto parse_int;
        break;
      }

      // optional group Int = 10 { ... };
      case 10: {
        if (tag == 83) {
         parse_int:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                10, input, mutable_int_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_vec;
        break;
      }

      // optional group Vec = 20 { ... };
      case 20: {
        if (tag == 163) {
         parse_vec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                20, input, mutable_vec()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(243)) goto parse_str;
        break;
      }

      // optional group Str = 30 { ... };
      case 30: {
        if (tag == 243) {
         parse_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                30, input, mutable_str()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(323)) goto parse_float;
        break;
      }

      // optional group Float = 40 { ... };
      case 40: {
        if (tag == 323) {
         parse_float:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                40, input, mutable_float_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(403)) goto parse_global;
        break;
      }

      // optional group Global = 50 { ... };
      case 50: {
        if (tag == 403) {
         parse_global:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                50, input, mutable_global()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.PrevirtType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.PrevirtType)
  return false;
#undef DO_
}

void PrevirtType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.PrevirtType)
  // required .previrt.proto.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional group Int = 10 { ... };
  if (has_int_()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      10, *this->int__, output);
  }

  // optional group Vec = 20 { ... };
  if (has_vec()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      20, *this->vec_, output);
  }

  // optional group Str = 30 { ... };
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      30, *this->str_, output);
  }

  // optional group Float = 40 { ... };
  if (has_float_()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      40, *this->float__, output);
  }

  // optional group Global = 50 { ... };
  if (has_global()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      50, *this->global_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.PrevirtType)
}

::google::protobuf::uint8* PrevirtType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.PrevirtType)
  // required .previrt.proto.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional group Int = 10 { ... };
  if (has_int_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        10, *this->int__, false, target);
  }

  // optional group Vec = 20 { ... };
  if (has_vec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        20, *this->vec_, false, target);
  }

  // optional group Str = 30 { ... };
  if (has_str()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        30, *this->str_, false, target);
  }

  // optional group Float = 40 { ... };
  if (has_float_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        40, *this->float__, false, target);
  }

  // optional group Global = 50 { ... };
  if (has_global()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        50, *this->global_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.PrevirtType)
  return target;
}

int PrevirtType::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.PrevirtType)
  int total_size = 0;

  // required .previrt.proto.Type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[1 / 32] & 62u) {
    // optional group Int = 10 { ... };
    if (has_int_()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->int__);
    }

    // optional group Vec = 20 { ... };
    if (has_vec()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->vec_);
    }

    // optional group Str = 30 { ... };
    if (has_str()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->str_);
    }

    // optional group Float = 40 { ... };
    if (has_float_()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->float__);
    }

    // optional group Global = 50 { ... };
    if (has_global()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->global_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrevirtType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.PrevirtType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PrevirtType* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrevirtType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.PrevirtType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.PrevirtType)
    MergeFrom(*source);
  }
}

void PrevirtType::MergeFrom(const PrevirtType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.PrevirtType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_int_()) {
      mutable_int_()->::previrt::proto::PrevirtType_Int::MergeFrom(from.int_());
    }
    if (from.has_vec()) {
      mutable_vec()->::previrt::proto::PrevirtType_Vec::MergeFrom(from.vec());
    }
    if (from.has_str()) {
      mutable_str()->::previrt::proto::PrevirtType_Str::MergeFrom(from.str());
    }
    if (from.has_float_()) {
      mutable_float_()->::previrt::proto::PrevirtType_Float::MergeFrom(from.float_());
    }
    if (from.has_global()) {
      mutable_global()->::previrt::proto::PrevirtType_Global::MergeFrom(from.global());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PrevirtType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.PrevirtType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrevirtType::CopyFrom(const PrevirtType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.PrevirtType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrevirtType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_int_()) {
    if (!this->int__->IsInitialized()) return false;
  }
  if (has_vec()) {
    if (!this->vec_->IsInitialized()) return false;
  }
  if (has_float_()) {
    if (!this->float__->IsInitialized()) return false;
  }
  if (has_global()) {
    if (!this->global_->IsInitialized()) return false;
  }
  return true;
}

void PrevirtType::Swap(PrevirtType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrevirtType::InternalSwap(PrevirtType* other) {
  std::swap(type_, other->type_);
  std::swap(int__, other->int__);
  std::swap(vec_, other->vec_);
  std::swap(str_, other->str_);
  std::swap(float__, other->float__);
  std::swap(global_, other->global_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrevirtType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrevirtType_descriptor_;
  metadata.reflection = PrevirtType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrevirtType_Int

// required uint32 bits = 2;
bool PrevirtType_Int::has_bits() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrevirtType_Int::set_has_bits() {
  _has_bits_[0] |= 0x00000001u;
}
void PrevirtType_Int::clear_has_bits() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrevirtType_Int::clear_bits() {
  bits_ = 0u;
  clear_has_bits();
}
 ::google::protobuf::uint32 PrevirtType_Int::bits() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.Int.bits)
  return bits_;
}
 void PrevirtType_Int::set_bits(::google::protobuf::uint32 value) {
  set_has_bits();
  bits_ = value;
  // @@protoc_insertion_point(field_set:previrt.proto.PrevirtType.Int.bits)
}

// optional string value = 3;
bool PrevirtType_Int::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrevirtType_Int::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void PrevirtType_Int::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void PrevirtType_Int::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& PrevirtType_Int::value() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.Int.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PrevirtType_Int::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:previrt.proto.PrevirtType.Int.value)
}
 void PrevirtType_Int::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:previrt.proto.PrevirtType.Int.value)
}
 void PrevirtType_Int::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:previrt.proto.PrevirtType.Int.value)
}
 ::std::string* PrevirtType_Int::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:previrt.proto.PrevirtType.Int.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PrevirtType_Int::release_value() {
  // @@protoc_insertion_point(field_release:previrt.proto.PrevirtType.Int.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PrevirtType_Int::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.PrevirtType.Int.value)
}

// -------------------------------------------------------------------

// PrevirtType_Vec

// repeated .previrt.proto.PrevirtType elems = 21;
int PrevirtType_Vec::elems_size() const {
  return elems_.size();
}
void PrevirtType_Vec::clear_elems() {
  elems_.Clear();
}
const ::previrt::proto::PrevirtType& PrevirtType_Vec::elems(int index) const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.Vec.elems)
  return elems_.Get(index);
}
::previrt::proto::PrevirtType* PrevirtType_Vec::mutable_elems(int index) {
  // @@protoc_insertion_point(field_mutable:previrt.proto.PrevirtType.Vec.elems)
  return elems_.Mutable(index);
}
::previrt::proto::PrevirtType* PrevirtType_Vec::add_elems() {
  // @@protoc_insertion_point(field_add:previrt.proto.PrevirtType.Vec.elems)
  return elems_.Add();
}
::google::protobuf::RepeatedPtrField< ::previrt::proto::PrevirtType >*
PrevirtType_Vec::mutable_elems() {
  // @@protoc_insertion_point(field_mutable_list:previrt.proto.PrevirtType.Vec.elems)
  return &elems_;
}
const ::google::protobuf::RepeatedPtrField< ::previrt::proto::PrevirtType >&
PrevirtType_Vec::elems() const {
  // @@protoc_insertion_point(field_list:previrt.proto.PrevirtType.Vec.elems)
  return elems_;
}

// -------------------------------------------------------------------

// PrevirtType_Str

// optional bytes data = 31;
bool PrevirtType_Str::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrevirtType_Str::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void PrevirtType_Str::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrevirtType_Str::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& PrevirtType_Str::data() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.Str.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PrevirtType_Str::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:previrt.proto.PrevirtType.Str.data)
}
 void PrevirtType_Str::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:previrt.proto.PrevirtType.Str.data)
}
 void PrevirtType_Str::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:previrt.proto.PrevirtType.Str.data)
}
 ::std::string* PrevirtType_Str::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:previrt.proto.PrevirtType.Str.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PrevirtType_Str::release_data() {
  // @@protoc_insertion_point(field_release:previrt.proto.PrevirtType.Str.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PrevirtType_Str::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.PrevirtType.Str.data)
}

// optional bool cstr = 32 [default = true];
bool PrevirtType_Str::has_cstr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrevirtType_Str::set_has_cstr() {
  _has_bits_[0] |= 0x00000002u;
}
void PrevirtType_Str::clear_has_cstr() {
  _has_bits_[0] &= ~0x00000002u;
}
void PrevirtType_Str::clear_cstr() {
  cstr_ = true;
  clear_has_cstr();
}
 bool PrevirtType_Str::cstr() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.Str.cstr)
  return cstr_;
}
 void PrevirtType_Str::set_cstr(bool value) {
  set_has_cstr();
  cstr_ = value;
  // @@protoc_insertion_point(field_set:previrt.proto.PrevirtType.Str.cstr)
}

// -------------------------------------------------------------------

// PrevirtType_Float

// required .previrt.proto.FloatSemantics sem = 41;
bool PrevirtType_Float::has_sem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrevirtType_Float::set_has_sem() {
  _has_bits_[0] |= 0x00000001u;
}
void PrevirtType_Float::clear_has_sem() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrevirtType_Float::clear_sem() {
  sem_ = 1;
  clear_has_sem();
}
 ::previrt::proto::FloatSemantics PrevirtType_Float::sem() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.Float.sem)
  return static_cast< ::previrt::proto::FloatSemantics >(sem_);
}
 void PrevirtType_Float::set_sem(::previrt::proto::FloatSemantics value) {
  assert(::previrt::proto::FloatSemantics_IsValid(value));
  set_has_sem();
  sem_ = value;
  // @@protoc_insertion_point(field_set:previrt.proto.PrevirtType.Float.sem)
}

// optional string data = 42;
bool PrevirtType_Float::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrevirtType_Float::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void PrevirtType_Float::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void PrevirtType_Float::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& PrevirtType_Float::data() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.Float.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PrevirtType_Float::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:previrt.proto.PrevirtType.Float.data)
}
 void PrevirtType_Float::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:previrt.proto.PrevirtType.Float.data)
}
 void PrevirtType_Float::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:previrt.proto.PrevirtType.Float.data)
}
 ::std::string* PrevirtType_Float::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:previrt.proto.PrevirtType.Float.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PrevirtType_Float::release_data() {
  // @@protoc_insertion_point(field_release:previrt.proto.PrevirtType.Float.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PrevirtType_Float::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.PrevirtType.Float.data)
}

// -------------------------------------------------------------------

// PrevirtType_Global

// required bytes name = 51;
bool PrevirtType_Global::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrevirtType_Global::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void PrevirtType_Global::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrevirtType_Global::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& PrevirtType_Global::name() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.Global.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PrevirtType_Global::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:previrt.proto.PrevirtType.Global.name)
}
 void PrevirtType_Global::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:previrt.proto.PrevirtType.Global.name)
}
 void PrevirtType_Global::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:previrt.proto.PrevirtType.Global.name)
}
 ::std::string* PrevirtType_Global::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:previrt.proto.PrevirtType.Global.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PrevirtType_Global::release_name() {
  // @@protoc_insertion_point(field_release:previrt.proto.PrevirtType.Global.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PrevirtType_Global::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.PrevirtType.Global.name)
}

// optional bool is_const = 52 [default = false];
bool PrevirtType_Global::has_is_const() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrevirtType_Global::set_has_is_const() {
  _has_bits_[0] |= 0x00000002u;
}
void PrevirtType_Global::clear_has_is_const() {
  _has_bits_[0] &= ~0x00000002u;
}
void PrevirtType_Global::clear_is_const() {
  is_const_ = false;
  clear_has_is_const();
}
 bool PrevirtType_Global::is_const() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.Global.is_const)
  return is_const_;
}
 void PrevirtType_Global::set_is_const(bool value) {
  set_has_is_const();
  is_const_ = value;
  // @@protoc_insertion_point(field_set:previrt.proto.PrevirtType.Global.is_const)
}

// -------------------------------------------------------------------

// PrevirtType

// required .previrt.proto.Type type = 1;
bool PrevirtType::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrevirtType::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void PrevirtType::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrevirtType::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::previrt::proto::Type PrevirtType::type() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.type)
  return static_cast< ::previrt::proto::Type >(type_);
}
 void PrevirtType::set_type(::previrt::proto::Type value) {
  assert(::previrt::proto::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:previrt.proto.PrevirtType.type)
}

// optional group Int = 10 { ... };
bool PrevirtType::has_int_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrevirtType::set_has_int_() {
  _has_bits_[0] |= 0x00000002u;
}
void PrevirtType::clear_has_int_() {
  _has_bits_[0] &= ~0x00000002u;
}
void PrevirtType::clear_int_() {
  if (int__ != NULL) int__->::previrt::proto::PrevirtType_Int::Clear();
  clear_has_int_();
}
const ::previrt::proto::PrevirtType_Int& PrevirtType::int_() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.int)
  return int__ != NULL ? *int__ : *default_instance_->int__;
}
::previrt::proto::PrevirtType_Int* PrevirtType::mutable_int_() {
  set_has_int_();
  if (int__ == NULL) {
    int__ = new ::previrt::proto::PrevirtType_Int;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.PrevirtType.int)
  return int__;
}
::previrt::proto::PrevirtType_Int* PrevirtType::release_int_() {
  // @@protoc_insertion_point(field_release:previrt.proto.PrevirtType.int)
  clear_has_int_();
  ::previrt::proto::PrevirtType_Int* temp = int__;
  int__ = NULL;
  return temp;
}
void PrevirtType::set_allocated_int_(::previrt::proto::PrevirtType_Int* int_) {
  delete int__;
  int__ = int_;
  if (int_) {
    set_has_int_();
  } else {
    clear_has_int_();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.PrevirtType.int)
}

// optional group Vec = 20 { ... };
bool PrevirtType::has_vec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PrevirtType::set_has_vec() {
  _has_bits_[0] |= 0x00000004u;
}
void PrevirtType::clear_has_vec() {
  _has_bits_[0] &= ~0x00000004u;
}
void PrevirtType::clear_vec() {
  if (vec_ != NULL) vec_->::previrt::proto::PrevirtType_Vec::Clear();
  clear_has_vec();
}
const ::previrt::proto::PrevirtType_Vec& PrevirtType::vec() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.vec)
  return vec_ != NULL ? *vec_ : *default_instance_->vec_;
}
::previrt::proto::PrevirtType_Vec* PrevirtType::mutable_vec() {
  set_has_vec();
  if (vec_ == NULL) {
    vec_ = new ::previrt::proto::PrevirtType_Vec;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.PrevirtType.vec)
  return vec_;
}
::previrt::proto::PrevirtType_Vec* PrevirtType::release_vec() {
  // @@protoc_insertion_point(field_release:previrt.proto.PrevirtType.vec)
  clear_has_vec();
  ::previrt::proto::PrevirtType_Vec* temp = vec_;
  vec_ = NULL;
  return temp;
}
void PrevirtType::set_allocated_vec(::previrt::proto::PrevirtType_Vec* vec) {
  delete vec_;
  vec_ = vec;
  if (vec) {
    set_has_vec();
  } else {
    clear_has_vec();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.PrevirtType.vec)
}

// optional group Str = 30 { ... };
bool PrevirtType::has_str() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PrevirtType::set_has_str() {
  _has_bits_[0] |= 0x00000008u;
}
void PrevirtType::clear_has_str() {
  _has_bits_[0] &= ~0x00000008u;
}
void PrevirtType::clear_str() {
  if (str_ != NULL) str_->::previrt::proto::PrevirtType_Str::Clear();
  clear_has_str();
}
const ::previrt::proto::PrevirtType_Str& PrevirtType::str() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.str)
  return str_ != NULL ? *str_ : *default_instance_->str_;
}
::previrt::proto::PrevirtType_Str* PrevirtType::mutable_str() {
  set_has_str();
  if (str_ == NULL) {
    str_ = new ::previrt::proto::PrevirtType_Str;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.PrevirtType.str)
  return str_;
}
::previrt::proto::PrevirtType_Str* PrevirtType::release_str() {
  // @@protoc_insertion_point(field_release:previrt.proto.PrevirtType.str)
  clear_has_str();
  ::previrt::proto::PrevirtType_Str* temp = str_;
  str_ = NULL;
  return temp;
}
void PrevirtType::set_allocated_str(::previrt::proto::PrevirtType_Str* str) {
  delete str_;
  str_ = str;
  if (str) {
    set_has_str();
  } else {
    clear_has_str();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.PrevirtType.str)
}

// optional group Float = 40 { ... };
bool PrevirtType::has_float_() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PrevirtType::set_has_float_() {
  _has_bits_[0] |= 0x00000010u;
}
void PrevirtType::clear_has_float_() {
  _has_bits_[0] &= ~0x00000010u;
}
void PrevirtType::clear_float_() {
  if (float__ != NULL) float__->::previrt::proto::PrevirtType_Float::Clear();
  clear_has_float_();
}
const ::previrt::proto::PrevirtType_Float& PrevirtType::float_() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.float)
  return float__ != NULL ? *float__ : *default_instance_->float__;
}
::previrt::proto::PrevirtType_Float* PrevirtType::mutable_float_() {
  set_has_float_();
  if (float__ == NULL) {
    float__ = new ::previrt::proto::PrevirtType_Float;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.PrevirtType.float)
  return float__;
}
::previrt::proto::PrevirtType_Float* PrevirtType::release_float_() {
  // @@protoc_insertion_point(field_release:previrt.proto.PrevirtType.float)
  clear_has_float_();
  ::previrt::proto::PrevirtType_Float* temp = float__;
  float__ = NULL;
  return temp;
}
void PrevirtType::set_allocated_float_(::previrt::proto::PrevirtType_Float* float_) {
  delete float__;
  float__ = float_;
  if (float_) {
    set_has_float_();
  } else {
    clear_has_float_();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.PrevirtType.float)
}

// optional group Global = 50 { ... };
bool PrevirtType::has_global() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PrevirtType::set_has_global() {
  _has_bits_[0] |= 0x00000020u;
}
void PrevirtType::clear_has_global() {
  _has_bits_[0] &= ~0x00000020u;
}
void PrevirtType::clear_global() {
  if (global_ != NULL) global_->::previrt::proto::PrevirtType_Global::Clear();
  clear_has_global();
}
const ::previrt::proto::PrevirtType_Global& PrevirtType::global() const {
  // @@protoc_insertion_point(field_get:previrt.proto.PrevirtType.global)
  return global_ != NULL ? *global_ : *default_instance_->global_;
}
::previrt::proto::PrevirtType_Global* PrevirtType::mutable_global() {
  set_has_global();
  if (global_ == NULL) {
    global_ = new ::previrt::proto::PrevirtType_Global;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.PrevirtType.global)
  return global_;
}
::previrt::proto::PrevirtType_Global* PrevirtType::release_global() {
  // @@protoc_insertion_point(field_release:previrt.proto.PrevirtType.global)
  clear_has_global();
  ::previrt::proto::PrevirtType_Global* temp = global_;
  global_ = NULL;
  return temp;
}
void PrevirtType::set_allocated_global(::previrt::proto::PrevirtType_Global* global) {
  delete global_;
  global_ = global;
  if (global) {
    set_has_global();
  } else {
    clear_has_global();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.PrevirtType.global)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallInfo::kNameFieldNumber;
const int CallInfo::kCountFieldNumber;
const int CallInfo::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallInfo::CallInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.CallInfo)
}

void CallInfo::InitAsDefaultInstance() {
}

CallInfo::CallInfo(const CallInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.CallInfo)
}

void CallInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 1u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CallInfo::~CallInfo() {
  // @@protoc_insertion_point(destructor:previrt.proto.CallInfo)
  SharedDtor();
}

void CallInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CallInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallInfo_descriptor_;
}

const CallInfo& CallInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

CallInfo* CallInfo::default_instance_ = NULL;

CallInfo* CallInfo::New(::google::protobuf::Arena* arena) const {
  CallInfo* n = new CallInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.CallInfo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    count_ = 1u;
  }
  args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CallInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.CallInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional uint32 count = 2 [default = 1];
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_args;
        break;
      }

      // repeated .previrt.proto.PrevirtType args = 3;
      case 3: {
        if (tag == 26) {
         parse_args:
          DO_(input->IncrementRecursionDepth());
         parse_loop_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_args;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.CallInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.CallInfo)
  return false;
#undef DO_
}

void CallInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.CallInfo)
  // required bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 count = 2 [default = 1];
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // repeated .previrt.proto.PrevirtType args = 3;
  for (unsigned int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->args(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.CallInfo)
}

::google::protobuf::uint8* CallInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.CallInfo)
  // required bytes name = 1;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // optional uint32 count = 2 [default = 1];
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // repeated .previrt.proto.PrevirtType args = 3;
  for (unsigned int i = 0, n = this->args_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->args(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.CallInfo)
  return target;
}

int CallInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.CallInfo)
  int total_size = 0;

  // required bytes name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }
  // optional uint32 count = 2 [default = 1];
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // repeated .previrt.proto.PrevirtType args = 3;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->args(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.CallInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CallInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CallInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.CallInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.CallInfo)
    MergeFrom(*source);
  }
}

void CallInfo::MergeFrom(const CallInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.CallInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  args_.MergeFrom(from.args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CallInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.CallInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallInfo::CopyFrom(const CallInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.CallInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->args())) return false;
  return true;
}

void CallInfo::Swap(CallInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallInfo::InternalSwap(CallInfo* other) {
  name_.Swap(&other->name_);
  std::swap(count_, other->count_);
  args_.UnsafeArenaSwap(&other->args_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallInfo_descriptor_;
  metadata.reflection = CallInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallInfo

// required bytes name = 1;
bool CallInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CallInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CallInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CallInfo::name() const {
  // @@protoc_insertion_point(field_get:previrt.proto.CallInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:previrt.proto.CallInfo.name)
}
 void CallInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:previrt.proto.CallInfo.name)
}
 void CallInfo::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:previrt.proto.CallInfo.name)
}
 ::std::string* CallInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:previrt.proto.CallInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallInfo::release_name() {
  // @@protoc_insertion_point(field_release:previrt.proto.CallInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.CallInfo.name)
}

// optional uint32 count = 2 [default = 1];
bool CallInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void CallInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void CallInfo::clear_count() {
  count_ = 1u;
  clear_has_count();
}
 ::google::protobuf::uint32 CallInfo::count() const {
  // @@protoc_insertion_point(field_get:previrt.proto.CallInfo.count)
  return count_;
}
 void CallInfo::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:previrt.proto.CallInfo.count)
}

// repeated .previrt.proto.PrevirtType args = 3;
int CallInfo::args_size() const {
  return args_.size();
}
void CallInfo::clear_args() {
  args_.Clear();
}
const ::previrt::proto::PrevirtType& CallInfo::args(int index) const {
  // @@protoc_insertion_point(field_get:previrt.proto.CallInfo.args)
  return args_.Get(index);
}
::previrt::proto::PrevirtType* CallInfo::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:previrt.proto.CallInfo.args)
  return args_.Mutable(index);
}
::previrt::proto::PrevirtType* CallInfo::add_args() {
  // @@protoc_insertion_point(field_add:previrt.proto.CallInfo.args)
  return args_.Add();
}
::google::protobuf::RepeatedPtrField< ::previrt::proto::PrevirtType >*
CallInfo::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:previrt.proto.CallInfo.args)
  return &args_;
}
const ::google::protobuf::RepeatedPtrField< ::previrt::proto::PrevirtType >&
CallInfo::args() const {
  // @@protoc_insertion_point(field_list:previrt.proto.CallInfo.args)
  return args_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallRewrite::kCallFieldNumber;
const int CallRewrite::kNewFunctionFieldNumber;
const int CallRewrite::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallRewrite::CallRewrite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.CallRewrite)
}

void CallRewrite::InitAsDefaultInstance() {
  call_ = const_cast< ::previrt::proto::CallInfo*>(&::previrt::proto::CallInfo::default_instance());
}

CallRewrite::CallRewrite(const CallRewrite& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.CallRewrite)
}

void CallRewrite::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  call_ = NULL;
  new_function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CallRewrite::~CallRewrite() {
  // @@protoc_insertion_point(destructor:previrt.proto.CallRewrite)
  SharedDtor();
}

void CallRewrite::SharedDtor() {
  new_function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete call_;
  }
}

void CallRewrite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallRewrite::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallRewrite_descriptor_;
}

const CallRewrite& CallRewrite::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

CallRewrite* CallRewrite::default_instance_ = NULL;

CallRewrite* CallRewrite::New(::google::protobuf::Arena* arena) const {
  CallRewrite* n = new CallRewrite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallRewrite::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.CallRewrite)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_call()) {
      if (call_ != NULL) call_->::previrt::proto::CallInfo::Clear();
    }
    if (has_new_function()) {
      new_function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CallRewrite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.CallRewrite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .previrt.proto.CallInfo call = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_call()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_new_function;
        break;
      }

      // required bytes new_function = 2;
      case 2: {
        if (tag == 18) {
         parse_new_function:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_new_function()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_args;
        break;
      }

      // repeated int32 args = 3 [packed = true];
      case 3: {
        if (tag == 26) {
         parse_args:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_args())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26, input, this->mutable_args())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.CallRewrite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.CallRewrite)
  return false;
#undef DO_
}

void CallRewrite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.CallRewrite)
  // required .previrt.proto.CallInfo call = 1;
  if (has_call()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->call_, output);
  }

  // required bytes new_function = 2;
  if (has_new_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->new_function(), output);
  }

  // repeated int32 args = 3 [packed = true];
  if (this->args_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_args_cached_byte_size_);
  }
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->args(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.CallRewrite)
}

::google::protobuf::uint8* CallRewrite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.CallRewrite)
  // required .previrt.proto.CallInfo call = 1;
  if (has_call()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->call_, false, target);
  }

  // required bytes new_function = 2;
  if (has_new_function()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->new_function(), target);
  }

  // repeated int32 args = 3 [packed = true];
  if (this->args_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _args_cached_byte_size_, target);
  }
  for (int i = 0; i < this->args_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->args(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.CallRewrite)
  return target;
}

int CallRewrite::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:previrt.proto.CallRewrite)
  int total_size = 0;

  if (has_call()) {
    // required .previrt.proto.CallInfo call = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->call_);
  }

  if (has_new_function()) {
    // required bytes new_function = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->new_function());
  }

  return total_size;
}
int CallRewrite::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.CallRewrite)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .previrt.proto.CallInfo call = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->call_);

    // required bytes new_function = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->new_function());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 args = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->args_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->args(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _args_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallRewrite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.CallRewrite)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CallRewrite* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CallRewrite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.CallRewrite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.CallRewrite)
    MergeFrom(*source);
  }
}

void CallRewrite::MergeFrom(const CallRewrite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.CallRewrite)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  args_.MergeFrom(from.args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_call()) {
      mutable_call()->::previrt::proto::CallInfo::MergeFrom(from.call());
    }
    if (from.has_new_function()) {
      set_has_new_function();
      new_function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_function_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CallRewrite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.CallRewrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallRewrite::CopyFrom(const CallRewrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.CallRewrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallRewrite::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_call()) {
    if (!this->call_->IsInitialized()) return false;
  }
  return true;
}

void CallRewrite::Swap(CallRewrite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallRewrite::InternalSwap(CallRewrite* other) {
  std::swap(call_, other->call_);
  new_function_.Swap(&other->new_function_);
  args_.UnsafeArenaSwap(&other->args_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallRewrite::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallRewrite_descriptor_;
  metadata.reflection = CallRewrite_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CallRewrite

// required .previrt.proto.CallInfo call = 1;
bool CallRewrite::has_call() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CallRewrite::set_has_call() {
  _has_bits_[0] |= 0x00000001u;
}
void CallRewrite::clear_has_call() {
  _has_bits_[0] &= ~0x00000001u;
}
void CallRewrite::clear_call() {
  if (call_ != NULL) call_->::previrt::proto::CallInfo::Clear();
  clear_has_call();
}
const ::previrt::proto::CallInfo& CallRewrite::call() const {
  // @@protoc_insertion_point(field_get:previrt.proto.CallRewrite.call)
  return call_ != NULL ? *call_ : *default_instance_->call_;
}
::previrt::proto::CallInfo* CallRewrite::mutable_call() {
  set_has_call();
  if (call_ == NULL) {
    call_ = new ::previrt::proto::CallInfo;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.CallRewrite.call)
  return call_;
}
::previrt::proto::CallInfo* CallRewrite::release_call() {
  // @@protoc_insertion_point(field_release:previrt.proto.CallRewrite.call)
  clear_has_call();
  ::previrt::proto::CallInfo* temp = call_;
  call_ = NULL;
  return temp;
}
void CallRewrite::set_allocated_call(::previrt::proto::CallInfo* call) {
  delete call_;
  call_ = call;
  if (call) {
    set_has_call();
  } else {
    clear_has_call();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.CallRewrite.call)
}

// required bytes new_function = 2;
bool CallRewrite::has_new_function() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CallRewrite::set_has_new_function() {
  _has_bits_[0] |= 0x00000002u;
}
void CallRewrite::clear_has_new_function() {
  _has_bits_[0] &= ~0x00000002u;
}
void CallRewrite::clear_new_function() {
  new_function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_new_function();
}
 const ::std::string& CallRewrite::new_function() const {
  // @@protoc_insertion_point(field_get:previrt.proto.CallRewrite.new_function)
  return new_function_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallRewrite::set_new_function(const ::std::string& value) {
  set_has_new_function();
  new_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:previrt.proto.CallRewrite.new_function)
}
 void CallRewrite::set_new_function(const char* value) {
  set_has_new_function();
  new_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:previrt.proto.CallRewrite.new_function)
}
 void CallRewrite::set_new_function(const void* value, size_t size) {
  set_has_new_function();
  new_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:previrt.proto.CallRewrite.new_function)
}
 ::std::string* CallRewrite::mutable_new_function() {
  set_has_new_function();
  // @@protoc_insertion_point(field_mutable:previrt.proto.CallRewrite.new_function)
  return new_function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CallRewrite::release_new_function() {
  // @@protoc_insertion_point(field_release:previrt.proto.CallRewrite.new_function)
  clear_has_new_function();
  return new_function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CallRewrite::set_allocated_new_function(::std::string* new_function) {
  if (new_function != NULL) {
    set_has_new_function();
  } else {
    clear_has_new_function();
  }
  new_function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_function);
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.CallRewrite.new_function)
}

// repeated int32 args = 3 [packed = true];
int CallRewrite::args_size() const {
  return args_.size();
}
void CallRewrite::clear_args() {
  args_.Clear();
}
 ::google::protobuf::int32 CallRewrite::args(int index) const {
  // @@protoc_insertion_point(field_get:previrt.proto.CallRewrite.args)
  return args_.Get(index);
}
 void CallRewrite::set_args(int index, ::google::protobuf::int32 value) {
  args_.Set(index, value);
  // @@protoc_insertion_point(field_set:previrt.proto.CallRewrite.args)
}
 void CallRewrite::add_args(::google::protobuf::int32 value) {
  args_.Add(value);
  // @@protoc_insertion_point(field_add:previrt.proto.CallRewrite.args)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CallRewrite::args() const {
  // @@protoc_insertion_point(field_list:previrt.proto.CallRewrite.args)
  return args_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CallRewrite::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:previrt.proto.CallRewrite.args)
  return &args_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComponentInterface::kCallsFieldNumber;
const int ComponentInterface::kDefinitionsFieldNumber;
const int ComponentInterface::kGlobalsFieldNumber;
const int ComponentInterface::kReferencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComponentInterface::ComponentInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.ComponentInterface)
}

void ComponentInterface::InitAsDefaultInstance() {
}

ComponentInterface::ComponentInterface(const ComponentInterface& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.ComponentInterface)
}

void ComponentInterface::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentInterface::~ComponentInterface() {
  // @@protoc_insertion_point(destructor:previrt.proto.ComponentInterface)
  SharedDtor();
}

void ComponentInterface::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentInterface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentInterface::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentInterface_descriptor_;
}

const ComponentInterface& ComponentInterface::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

ComponentInterface* ComponentInterface::default_instance_ = NULL;

ComponentInterface* ComponentInterface::New(::google::protobuf::Arena* arena) const {
  ComponentInterface* n = new ComponentInterface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComponentInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.ComponentInterface)
  calls_.Clear();
  definitions_.Clear();
  globals_.Clear();
  references_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ComponentInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.ComponentInterface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .previrt.proto.CallInfo calls = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_calls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_calls()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_calls;
        if (input->ExpectTag(18)) goto parse_loop_definitions;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .previrt.proto.CallInfo definitions = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_definitions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_definitions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_definitions;
        if (input->ExpectTag(26)) goto parse_loop_globals;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .previrt.proto.PrevirtType globals = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_globals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_globals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_globals;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_references;
        break;
      }

      // repeated bytes references = 4;
      case 4: {
        if (tag == 34) {
         parse_references:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_references()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_references;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.ComponentInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.ComponentInterface)
  return false;
#undef DO_
}

void ComponentInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.ComponentInterface)
  // repeated .previrt.proto.CallInfo calls = 1;
  for (unsigned int i = 0, n = this->calls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->calls(i), output);
  }

  // repeated .previrt.proto.CallInfo definitions = 2;
  for (unsigned int i = 0, n = this->definitions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->definitions(i), output);
  }

  // repeated .previrt.proto.PrevirtType globals = 3;
  for (unsigned int i = 0, n = this->globals_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->globals(i), output);
  }

  // repeated bytes references = 4;
  for (int i = 0; i < this->references_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->references(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.ComponentInterface)
}

::google::protobuf::uint8* ComponentInterface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.ComponentInterface)
  // repeated .previrt.proto.CallInfo calls = 1;
  for (unsigned int i = 0, n = this->calls_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->calls(i), false, target);
  }

  // repeated .previrt.proto.CallInfo definitions = 2;
  for (unsigned int i = 0, n = this->definitions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->definitions(i), false, target);
  }

  // repeated .previrt.proto.PrevirtType globals = 3;
  for (unsigned int i = 0, n = this->globals_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->globals(i), false, target);
  }

  // repeated bytes references = 4;
  for (int i = 0; i < this->references_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(4, this->references(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.ComponentInterface)
  return target;
}

int ComponentInterface::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.ComponentInterface)
  int total_size = 0;

  // repeated .previrt.proto.CallInfo calls = 1;
  total_size += 1 * this->calls_size();
  for (int i = 0; i < this->calls_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->calls(i));
  }

  // repeated .previrt.proto.CallInfo definitions = 2;
  total_size += 1 * this->definitions_size();
  for (int i = 0; i < this->definitions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->definitions(i));
  }

  // repeated .previrt.proto.PrevirtType globals = 3;
  total_size += 1 * this->globals_size();
  for (int i = 0; i < this->globals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->globals(i));
  }

  // repeated bytes references = 4;
  total_size += 1 * this->references_size();
  for (int i = 0; i < this->references_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->references(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.ComponentInterface)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ComponentInterface* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ComponentInterface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.ComponentInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.ComponentInterface)
    MergeFrom(*source);
  }
}

void ComponentInterface::MergeFrom(const ComponentInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.ComponentInterface)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  calls_.MergeFrom(from.calls_);
  definitions_.MergeFrom(from.definitions_);
  globals_.MergeFrom(from.globals_);
  references_.MergeFrom(from.references_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ComponentInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.ComponentInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentInterface::CopyFrom(const ComponentInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.ComponentInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentInterface::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->calls())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->definitions())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->globals())) return false;
  return true;
}

void ComponentInterface::Swap(ComponentInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComponentInterface::InternalSwap(ComponentInterface* other) {
  calls_.UnsafeArenaSwap(&other->calls_);
  definitions_.UnsafeArenaSwap(&other->definitions_);
  globals_.UnsafeArenaSwap(&other->globals_);
  references_.UnsafeArenaSwap(&other->references_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComponentInterface::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentInterface_descriptor_;
  metadata.reflection = ComponentInterface_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComponentInterface

// repeated .previrt.proto.CallInfo calls = 1;
int ComponentInterface::calls_size() const {
  return calls_.size();
}
void ComponentInterface::clear_calls() {
  calls_.Clear();
}
const ::previrt::proto::CallInfo& ComponentInterface::calls(int index) const {
  // @@protoc_insertion_point(field_get:previrt.proto.ComponentInterface.calls)
  return calls_.Get(index);
}
::previrt::proto::CallInfo* ComponentInterface::mutable_calls(int index) {
  // @@protoc_insertion_point(field_mutable:previrt.proto.ComponentInterface.calls)
  return calls_.Mutable(index);
}
::previrt::proto::CallInfo* ComponentInterface::add_calls() {
  // @@protoc_insertion_point(field_add:previrt.proto.ComponentInterface.calls)
  return calls_.Add();
}
::google::protobuf::RepeatedPtrField< ::previrt::proto::CallInfo >*
ComponentInterface::mutable_calls() {
  // @@protoc_insertion_point(field_mutable_list:previrt.proto.ComponentInterface.calls)
  return &calls_;
}
const ::google::protobuf::RepeatedPtrField< ::previrt::proto::CallInfo >&
ComponentInterface::calls() const {
  // @@protoc_insertion_point(field_list:previrt.proto.ComponentInterface.calls)
  return calls_;
}

// repeated .previrt.proto.CallInfo definitions = 2;
int ComponentInterface::definitions_size() const {
  return definitions_.size();
}
void ComponentInterface::clear_definitions() {
  definitions_.Clear();
}
const ::previrt::proto::CallInfo& ComponentInterface::definitions(int index) const {
  // @@protoc_insertion_point(field_get:previrt.proto.ComponentInterface.definitions)
  return definitions_.Get(index);
}
::previrt::proto::CallInfo* ComponentInterface::mutable_definitions(int index) {
  // @@protoc_insertion_point(field_mutable:previrt.proto.ComponentInterface.definitions)
  return definitions_.Mutable(index);
}
::previrt::proto::CallInfo* ComponentInterface::add_definitions() {
  // @@protoc_insertion_point(field_add:previrt.proto.ComponentInterface.definitions)
  return definitions_.Add();
}
::google::protobuf::RepeatedPtrField< ::previrt::proto::CallInfo >*
ComponentInterface::mutable_definitions() {
  // @@protoc_insertion_point(field_mutable_list:previrt.proto.ComponentInterface.definitions)
  return &definitions_;
}
const ::google::protobuf::RepeatedPtrField< ::previrt::proto::CallInfo >&
ComponentInterface::definitions() const {
  // @@protoc_insertion_point(field_list:previrt.proto.ComponentInterface.definitions)
  return definitions_;
}

// repeated .previrt.proto.PrevirtType globals = 3;
int ComponentInterface::globals_size() const {
  return globals_.size();
}
void ComponentInterface::clear_globals() {
  globals_.Clear();
}
const ::previrt::proto::PrevirtType& ComponentInterface::globals(int index) const {
  // @@protoc_insertion_point(field_get:previrt.proto.ComponentInterface.globals)
  return globals_.Get(index);
}
::previrt::proto::PrevirtType* ComponentInterface::mutable_globals(int index) {
  // @@protoc_insertion_point(field_mutable:previrt.proto.ComponentInterface.globals)
  return globals_.Mutable(index);
}
::previrt::proto::PrevirtType* ComponentInterface::add_globals() {
  // @@protoc_insertion_point(field_add:previrt.proto.ComponentInterface.globals)
  return globals_.Add();
}
::google::protobuf::RepeatedPtrField< ::previrt::proto::PrevirtType >*
ComponentInterface::mutable_globals() {
  // @@protoc_insertion_point(field_mutable_list:previrt.proto.ComponentInterface.globals)
  return &globals_;
}
const ::google::protobuf::RepeatedPtrField< ::previrt::proto::PrevirtType >&
ComponentInterface::globals() const {
  // @@protoc_insertion_point(field_list:previrt.proto.ComponentInterface.globals)
  return globals_;
}

// repeated bytes references = 4;
int ComponentInterface::references_size() const {
  return references_.size();
}
void ComponentInterface::clear_references() {
  references_.Clear();
}
 const ::std::string& ComponentInterface::references(int index) const {
  // @@protoc_insertion_point(field_get:previrt.proto.ComponentInterface.references)
  return references_.Get(index);
}
 ::std::string* ComponentInterface::mutable_references(int index) {
  // @@protoc_insertion_point(field_mutable:previrt.proto.ComponentInterface.references)
  return references_.Mutable(index);
}
 void ComponentInterface::set_references(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:previrt.proto.ComponentInterface.references)
  references_.Mutable(index)->assign(value);
}
 void ComponentInterface::set_references(int index, const char* value) {
  references_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:previrt.proto.ComponentInterface.references)
}
 void ComponentInterface::set_references(int index, const void* value, size_t size) {
  references_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:previrt.proto.ComponentInterface.references)
}
 ::std::string* ComponentInterface::add_references() {
  // @@protoc_insertion_point(field_add_mutable:previrt.proto.ComponentInterface.references)
  return references_.Add();
}
 void ComponentInterface::add_references(const ::std::string& value) {
  references_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:previrt.proto.ComponentInterface.references)
}
 void ComponentInterface::add_references(const char* value) {
  references_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:previrt.proto.ComponentInterface.references)
}
 void ComponentInterface::add_references(const void* value, size_t size) {
  references_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:previrt.proto.ComponentInterface.references)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
ComponentInterface::references() const {
  // @@protoc_insertion_point(field_list:previrt.proto.ComponentInterface.references)
  return references_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
ComponentInterface::mutable_references() {
  // @@protoc_insertion_point(field_mutable_list:previrt.proto.ComponentInterface.references)
  return &references_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComponentInterfaceTransform::kCallsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComponentInterfaceTransform::ComponentInterfaceTransform()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.ComponentInterfaceTransform)
}

void ComponentInterfaceTransform::InitAsDefaultInstance() {
}

ComponentInterfaceTransform::ComponentInterfaceTransform(const ComponentInterfaceTransform& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.ComponentInterfaceTransform)
}

void ComponentInterfaceTransform::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentInterfaceTransform::~ComponentInterfaceTransform() {
  // @@protoc_insertion_point(destructor:previrt.proto.ComponentInterfaceTransform)
  SharedDtor();
}

void ComponentInterfaceTransform::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentInterfaceTransform::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentInterfaceTransform::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentInterfaceTransform_descriptor_;
}

const ComponentInterfaceTransform& ComponentInterfaceTransform::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

ComponentInterfaceTransform* ComponentInterfaceTransform::default_instance_ = NULL;

ComponentInterfaceTransform* ComponentInterfaceTransform::New(::google::protobuf::Arena* arena) const {
  ComponentInterfaceTransform* n = new ComponentInterfaceTransform;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComponentInterfaceTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.ComponentInterfaceTransform)
  calls_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ComponentInterfaceTransform::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.ComponentInterfaceTransform)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .previrt.proto.CallRewrite calls = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_calls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_calls()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_calls;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.ComponentInterfaceTransform)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.ComponentInterfaceTransform)
  return false;
#undef DO_
}

void ComponentInterfaceTransform::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.ComponentInterfaceTransform)
  // repeated .previrt.proto.CallRewrite calls = 1;
  for (unsigned int i = 0, n = this->calls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->calls(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.ComponentInterfaceTransform)
}

::google::protobuf::uint8* ComponentInterfaceTransform::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.ComponentInterfaceTransform)
  // repeated .previrt.proto.CallRewrite calls = 1;
  for (unsigned int i = 0, n = this->calls_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->calls(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.ComponentInterfaceTransform)
  return target;
}

int ComponentInterfaceTransform::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.ComponentInterfaceTransform)
  int total_size = 0;

  // repeated .previrt.proto.CallRewrite calls = 1;
  total_size += 1 * this->calls_size();
  for (int i = 0; i < this->calls_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->calls(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentInterfaceTransform::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.ComponentInterfaceTransform)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ComponentInterfaceTransform* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ComponentInterfaceTransform>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.ComponentInterfaceTransform)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.ComponentInterfaceTransform)
    MergeFrom(*source);
  }
}

void ComponentInterfaceTransform::MergeFrom(const ComponentInterfaceTransform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.ComponentInterfaceTransform)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  calls_.MergeFrom(from.calls_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ComponentInterfaceTransform::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.ComponentInterfaceTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentInterfaceTransform::CopyFrom(const ComponentInterfaceTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.ComponentInterfaceTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentInterfaceTransform::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->calls())) return false;
  return true;
}

void ComponentInterfaceTransform::Swap(ComponentInterfaceTransform* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComponentInterfaceTransform::InternalSwap(ComponentInterfaceTransform* other) {
  calls_.UnsafeArenaSwap(&other->calls_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComponentInterfaceTransform::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentInterfaceTransform_descriptor_;
  metadata.reflection = ComponentInterfaceTransform_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComponentInterfaceTransform

// repeated .previrt.proto.CallRewrite calls = 1;
int ComponentInterfaceTransform::calls_size() const {
  return calls_.size();
}
void ComponentInterfaceTransform::clear_calls() {
  calls_.Clear();
}
const ::previrt::proto::CallRewrite& ComponentInterfaceTransform::calls(int index) const {
  // @@protoc_insertion_point(field_get:previrt.proto.ComponentInterfaceTransform.calls)
  return calls_.Get(index);
}
::previrt::proto::CallRewrite* ComponentInterfaceTransform::mutable_calls(int index) {
  // @@protoc_insertion_point(field_mutable:previrt.proto.ComponentInterfaceTransform.calls)
  return calls_.Mutable(index);
}
::previrt::proto::CallRewrite* ComponentInterfaceTransform::add_calls() {
  // @@protoc_insertion_point(field_add:previrt.proto.ComponentInterfaceTransform.calls)
  return calls_.Add();
}
::google::protobuf::RepeatedPtrField< ::previrt::proto::CallRewrite >*
ComponentInterfaceTransform::mutable_calls() {
  // @@protoc_insertion_point(field_mutable_list:previrt.proto.ComponentInterfaceTransform.calls)
  return &calls_;
}
const ::google::protobuf::RepeatedPtrField< ::previrt::proto::CallRewrite >&
ComponentInterfaceTransform::calls() const {
  // @@protoc_insertion_point(field_list:previrt.proto.ComponentInterfaceTransform.calls)
  return calls_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionTree_Case::kVarFieldNumber;
const int ActionTree_Case::kTestFieldNumber;
const int ActionTree_Case::kThenFieldNumber;
const int ActionTree_Case::kElseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionTree_Case::ActionTree_Case()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.ActionTree.Case)
}

void ActionTree_Case::InitAsDefaultInstance() {
  test_ = const_cast< ::previrt::proto::PrevirtType*>(&::previrt::proto::PrevirtType::default_instance());
  _then_ = const_cast< ::previrt::proto::ActionTree*>(&::previrt::proto::ActionTree::default_instance());
  _else_ = const_cast< ::previrt::proto::ActionTree*>(&::previrt::proto::ActionTree::default_instance());
}

ActionTree_Case::ActionTree_Case(const ActionTree_Case& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.ActionTree.Case)
}

void ActionTree_Case::SharedCtor() {
  _cached_size_ = 0;
  var_ = 0;
  test_ = NULL;
  _then_ = NULL;
  _else_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionTree_Case::~ActionTree_Case() {
  // @@protoc_insertion_point(destructor:previrt.proto.ActionTree.Case)
  SharedDtor();
}

void ActionTree_Case::SharedDtor() {
  if (this != default_instance_) {
    delete test_;
    delete _then_;
    delete _else_;
  }
}

void ActionTree_Case::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionTree_Case::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionTree_Case_descriptor_;
}

const ActionTree_Case& ActionTree_Case::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

ActionTree_Case* ActionTree_Case::default_instance_ = NULL;

ActionTree_Case* ActionTree_Case::New(::google::protobuf::Arena* arena) const {
  ActionTree_Case* n = new ActionTree_Case;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionTree_Case::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.ActionTree.Case)
  if (_has_bits_[0 / 32] & 15u) {
    var_ = 0;
    if (has_test()) {
      if (test_ != NULL) test_->::previrt::proto::PrevirtType::Clear();
    }
    if (has__then()) {
      if (_then_ != NULL) _then_->::previrt::proto::ActionTree::Clear();
    }
    if (has__else()) {
      if (_else_ != NULL) _else_->::previrt::proto::ActionTree::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ActionTree_Case::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.ActionTree.Case)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 var = 11;
      case 11: {
        if (tag == 88) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &var_)));
          set_has_var();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_test;
        break;
      }

      // required .previrt.proto.PrevirtType test = 12;
      case 12: {
        if (tag == 98) {
         parse_test:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_test()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse__then;
        break;
      }

      // required .previrt.proto.ActionTree _then = 18;
      case 18: {
        if (tag == 146) {
         parse__then:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__then()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse__else;
        break;
      }

      // required .previrt.proto.ActionTree _else = 19;
      case 19: {
        if (tag == 154) {
         parse__else:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__else()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.ActionTree.Case)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.ActionTree.Case)
  return false;
#undef DO_
}

void ActionTree_Case::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.ActionTree.Case)
  // required int32 var = 11;
  if (has_var()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->var(), output);
  }

  // required .previrt.proto.PrevirtType test = 12;
  if (has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->test_, output);
  }

  // required .previrt.proto.ActionTree _then = 18;
  if (has__then()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->_then_, output);
  }

  // required .previrt.proto.ActionTree _else = 19;
  if (has__else()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->_else_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.ActionTree.Case)
}

::google::protobuf::uint8* ActionTree_Case::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.ActionTree.Case)
  // required int32 var = 11;
  if (has_var()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->var(), target);
  }

  // required .previrt.proto.PrevirtType test = 12;
  if (has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->test_, false, target);
  }

  // required .previrt.proto.ActionTree _then = 18;
  if (has__then()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->_then_, false, target);
  }

  // required .previrt.proto.ActionTree _else = 19;
  if (has__else()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->_else_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.ActionTree.Case)
  return target;
}

int ActionTree_Case::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:previrt.proto.ActionTree.Case)
  int total_size = 0;

  if (has_var()) {
    // required int32 var = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->var());
  }

  if (has_test()) {
    // required .previrt.proto.PrevirtType test = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->test_);
  }

  if (has__then()) {
    // required .previrt.proto.ActionTree _then = 18;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_then_);
  }

  if (has__else()) {
    // required .previrt.proto.ActionTree _else = 19;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_else_);
  }

  return total_size;
}
int ActionTree_Case::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.ActionTree.Case)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 var = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->var());

    // required .previrt.proto.PrevirtType test = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->test_);

    // required .previrt.proto.ActionTree _then = 18;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_then_);

    // required .previrt.proto.ActionTree _else = 19;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_else_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionTree_Case::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.ActionTree.Case)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActionTree_Case* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionTree_Case>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.ActionTree.Case)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.ActionTree.Case)
    MergeFrom(*source);
  }
}

void ActionTree_Case::MergeFrom(const ActionTree_Case& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.ActionTree.Case)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_var()) {
      set_var(from.var());
    }
    if (from.has_test()) {
      mutable_test()->::previrt::proto::PrevirtType::MergeFrom(from.test());
    }
    if (from.has__then()) {
      mutable__then()->::previrt::proto::ActionTree::MergeFrom(from._then());
    }
    if (from.has__else()) {
      mutable__else()->::previrt::proto::ActionTree::MergeFrom(from._else());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ActionTree_Case::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.ActionTree.Case)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionTree_Case::CopyFrom(const ActionTree_Case& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.ActionTree.Case)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionTree_Case::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_test()) {
    if (!this->test_->IsInitialized()) return false;
  }
  if (has__then()) {
    if (!this->_then_->IsInitialized()) return false;
  }
  if (has__else()) {
    if (!this->_else_->IsInitialized()) return false;
  }
  return true;
}

void ActionTree_Case::Swap(ActionTree_Case* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionTree_Case::InternalSwap(ActionTree_Case* other) {
  std::swap(var_, other->var_);
  std::swap(test_, other->test_);
  std::swap(_then_, other->_then_);
  std::swap(_else_, other->_else_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionTree_Case::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionTree_Case_descriptor_;
  metadata.reflection = ActionTree_Case_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionTree_Forward::ActionTree_Forward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.ActionTree.Forward)
}

void ActionTree_Forward::InitAsDefaultInstance() {
}

ActionTree_Forward::ActionTree_Forward(const ActionTree_Forward& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.ActionTree.Forward)
}

void ActionTree_Forward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionTree_Forward::~ActionTree_Forward() {
  // @@protoc_insertion_point(destructor:previrt.proto.ActionTree.Forward)
  SharedDtor();
}

void ActionTree_Forward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActionTree_Forward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionTree_Forward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionTree_Forward_descriptor_;
}

const ActionTree_Forward& ActionTree_Forward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

ActionTree_Forward* ActionTree_Forward::default_instance_ = NULL;

ActionTree_Forward* ActionTree_Forward::New(::google::protobuf::Arena* arena) const {
  ActionTree_Forward* n = new ActionTree_Forward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionTree_Forward::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.ActionTree.Forward)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ActionTree_Forward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.ActionTree.Forward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.ActionTree.Forward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.ActionTree.Forward)
  return false;
#undef DO_
}

void ActionTree_Forward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.ActionTree.Forward)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.ActionTree.Forward)
}

::google::protobuf::uint8* ActionTree_Forward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.ActionTree.Forward)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.ActionTree.Forward)
  return target;
}

int ActionTree_Forward::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.ActionTree.Forward)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionTree_Forward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.ActionTree.Forward)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActionTree_Forward* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionTree_Forward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.ActionTree.Forward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.ActionTree.Forward)
    MergeFrom(*source);
  }
}

void ActionTree_Forward::MergeFrom(const ActionTree_Forward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.ActionTree.Forward)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ActionTree_Forward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.ActionTree.Forward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionTree_Forward::CopyFrom(const ActionTree_Forward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.ActionTree.Forward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionTree_Forward::IsInitialized() const {

  return true;
}

void ActionTree_Forward::Swap(ActionTree_Forward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionTree_Forward::InternalSwap(ActionTree_Forward* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionTree_Forward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionTree_Forward_descriptor_;
  metadata.reflection = ActionTree_Forward_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionTree_Event::kExitFieldNumber;
const int ActionTree_Event::kHandlerFieldNumber;
const int ActionTree_Event::kArgsFieldNumber;
const int ActionTree_Event::kThenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionTree_Event::ActionTree_Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.ActionTree.Event)
}

void ActionTree_Event::InitAsDefaultInstance() {
  then_ = const_cast< ::previrt::proto::ActionTree*>(&::previrt::proto::ActionTree::default_instance());
}

ActionTree_Event::ActionTree_Event(const ActionTree_Event& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.ActionTree.Event)
}

void ActionTree_Event::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  exit_ = false;
  handler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  then_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionTree_Event::~ActionTree_Event() {
  // @@protoc_insertion_point(destructor:previrt.proto.ActionTree.Event)
  SharedDtor();
}

void ActionTree_Event::SharedDtor() {
  handler_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete then_;
  }
}

void ActionTree_Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionTree_Event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionTree_Event_descriptor_;
}

const ActionTree_Event& ActionTree_Event::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

ActionTree_Event* ActionTree_Event::default_instance_ = NULL;

ActionTree_Event* ActionTree_Event::New(::google::protobuf::Arena* arena) const {
  ActionTree_Event* n = new ActionTree_Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionTree_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.ActionTree.Event)
  if (_has_bits_[0 / 32] & 11u) {
    exit_ = false;
    if (has_handler()) {
      handler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_then()) {
      if (then_ != NULL) then_->::previrt::proto::ActionTree::Clear();
    }
  }
  args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ActionTree_Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.ActionTree.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool exit = 31 [default = false];
      case 31: {
        if (tag == 248) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exit_)));
          set_has_exit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(258)) goto parse_handler;
        break;
      }

      // optional bytes handler = 32;
      case 32: {
        if (tag == 258) {
         parse_handler:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_handler()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_args;
        break;
      }

      // repeated int32 args = 33;
      case 33: {
        if (tag == 264) {
         parse_args:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 264, input, this->mutable_args())));
        } else if (tag == 266) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_args())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_args;
        if (input->ExpectTag(314)) goto parse_then;
        break;
      }

      // optional .previrt.proto.ActionTree then = 39;
      case 39: {
        if (tag == 314) {
         parse_then:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_then()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.ActionTree.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.ActionTree.Event)
  return false;
#undef DO_
}

void ActionTree_Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.ActionTree.Event)
  // optional bool exit = 31 [default = false];
  if (has_exit()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(31, this->exit(), output);
  }

  // optional bytes handler = 32;
  if (has_handler()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      32, this->handler(), output);
  }

  // repeated int32 args = 33;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      33, this->args(i), output);
  }

  // optional .previrt.proto.ActionTree then = 39;
  if (has_then()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, *this->then_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.ActionTree.Event)
}

::google::protobuf::uint8* ActionTree_Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.ActionTree.Event)
  // optional bool exit = 31 [default = false];
  if (has_exit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(31, this->exit(), target);
  }

  // optional bytes handler = 32;
  if (has_handler()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        32, this->handler(), target);
  }

  // repeated int32 args = 33;
  for (int i = 0; i < this->args_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(33, this->args(i), target);
  }

  // optional .previrt.proto.ActionTree then = 39;
  if (has_then()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        39, *this->then_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.ActionTree.Event)
  return target;
}

int ActionTree_Event::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.ActionTree.Event)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 11u) {
    // optional bool exit = 31 [default = false];
    if (has_exit()) {
      total_size += 2 + 1;
    }

    // optional bytes handler = 32;
    if (has_handler()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->handler());
    }

    // optional .previrt.proto.ActionTree then = 39;
    if (has_then()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->then_);
    }

  }
  // repeated int32 args = 33;
  {
    int data_size = 0;
    for (int i = 0; i < this->args_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->args(i));
    }
    total_size += 2 * this->args_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionTree_Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.ActionTree.Event)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActionTree_Event* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionTree_Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.ActionTree.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.ActionTree.Event)
    MergeFrom(*source);
  }
}

void ActionTree_Event::MergeFrom(const ActionTree_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.ActionTree.Event)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  args_.MergeFrom(from.args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exit()) {
      set_exit(from.exit());
    }
    if (from.has_handler()) {
      set_has_handler();
      handler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handler_);
    }
    if (from.has_then()) {
      mutable_then()->::previrt::proto::ActionTree::MergeFrom(from.then());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ActionTree_Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.ActionTree.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionTree_Event::CopyFrom(const ActionTree_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.ActionTree.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionTree_Event::IsInitialized() const {

  if (has_then()) {
    if (!this->then_->IsInitialized()) return false;
  }
  return true;
}

void ActionTree_Event::Swap(ActionTree_Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionTree_Event::InternalSwap(ActionTree_Event* other) {
  std::swap(exit_, other->exit_);
  handler_.Swap(&other->handler_);
  args_.UnsafeArenaSwap(&other->args_);
  std::swap(then_, other->then_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionTree_Event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionTree_Event_descriptor_;
  metadata.reflection = ActionTree_Event_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionTree::kTypeFieldNumber;
const int ActionTree::kCaseFieldNumber;
const int ActionTree::kForwardFieldNumber;
const int ActionTree::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionTree::ActionTree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.ActionTree)
}

void ActionTree::InitAsDefaultInstance() {
  case__ = const_cast< ::previrt::proto::ActionTree_Case*>(&::previrt::proto::ActionTree_Case::default_instance());
  forward_ = const_cast< ::previrt::proto::ActionTree_Forward*>(&::previrt::proto::ActionTree_Forward::default_instance());
  event_ = const_cast< ::previrt::proto::ActionTree_Event*>(&::previrt::proto::ActionTree_Event::default_instance());
}

ActionTree::ActionTree(const ActionTree& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.ActionTree)
}

void ActionTree::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  case__ = NULL;
  forward_ = NULL;
  event_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionTree::~ActionTree() {
  // @@protoc_insertion_point(destructor:previrt.proto.ActionTree)
  SharedDtor();
}

void ActionTree::SharedDtor() {
  if (this != default_instance_) {
    delete case__;
    delete forward_;
    delete event_;
  }
}

void ActionTree::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionTree::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionTree_descriptor_;
}

const ActionTree& ActionTree::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

ActionTree* ActionTree::default_instance_ = NULL;

ActionTree* ActionTree::New(::google::protobuf::Arena* arena) const {
  ActionTree* n = new ActionTree;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionTree::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.ActionTree)
  if (_has_bits_[0 / 32] & 15u) {
    type_ = 1;
    if (has_case_()) {
      if (case__ != NULL) case__->::previrt::proto::ActionTree_Case::Clear();
    }
    if (has_forward()) {
      if (forward_ != NULL) forward_->::previrt::proto::ActionTree_Forward::Clear();
    }
    if (has_event()) {
      if (event_ != NULL) event_->::previrt::proto::ActionTree_Event::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ActionTree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.ActionTree)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .previrt.proto.ActionType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::previrt::proto::ActionType_IsValid(value)) {
            set_type(static_cast< ::previrt::proto::ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(83)) goto parse_case;
        break;
      }

      // optional group Case = 10 { ... };
      case 10: {
        if (tag == 83) {
         parse_case:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                10, input, mutable_case_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(163)) goto parse_forward;
        break;
      }

      // optional group Forward = 20 { ... };
      case 20: {
        if (tag == 163) {
         parse_forward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                20, input, mutable_forward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(243)) goto parse_event;
        break;
      }

      // optional group Event = 30 { ... };
      case 30: {
        if (tag == 243) {
         parse_event:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                30, input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.ActionTree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.ActionTree)
  return false;
#undef DO_
}

void ActionTree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.ActionTree)
  // required .previrt.proto.ActionType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional group Case = 10 { ... };
  if (has_case_()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      10, *this->case__, output);
  }

  // optional group Forward = 20 { ... };
  if (has_forward()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      20, *this->forward_, output);
  }

  // optional group Event = 30 { ... };
  if (has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      30, *this->event_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.ActionTree)
}

::google::protobuf::uint8* ActionTree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.ActionTree)
  // required .previrt.proto.ActionType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional group Case = 10 { ... };
  if (has_case_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        10, *this->case__, false, target);
  }

  // optional group Forward = 20 { ... };
  if (has_forward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        20, *this->forward_, false, target);
  }

  // optional group Event = 30 { ... };
  if (has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        30, *this->event_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.ActionTree)
  return target;
}

int ActionTree::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.ActionTree)
  int total_size = 0;

  // required .previrt.proto.ActionType type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional group Case = 10 { ... };
    if (has_case_()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->case__);
    }

    // optional group Forward = 20 { ... };
    if (has_forward()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->forward_);
    }

    // optional group Event = 30 { ... };
    if (has_event()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          *this->event_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionTree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.ActionTree)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActionTree* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionTree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.ActionTree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.ActionTree)
    MergeFrom(*source);
  }
}

void ActionTree::MergeFrom(const ActionTree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.ActionTree)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_case_()) {
      mutable_case_()->::previrt::proto::ActionTree_Case::MergeFrom(from.case_());
    }
    if (from.has_forward()) {
      mutable_forward()->::previrt::proto::ActionTree_Forward::MergeFrom(from.forward());
    }
    if (from.has_event()) {
      mutable_event()->::previrt::proto::ActionTree_Event::MergeFrom(from.event());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ActionTree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.ActionTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionTree::CopyFrom(const ActionTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.ActionTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionTree::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_case_()) {
    if (!this->case__->IsInitialized()) return false;
  }
  if (has_event()) {
    if (!this->event_->IsInitialized()) return false;
  }
  return true;
}

void ActionTree::Swap(ActionTree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionTree::InternalSwap(ActionTree* other) {
  std::swap(type_, other->type_);
  std::swap(case__, other->case__);
  std::swap(forward_, other->forward_);
  std::swap(event_, other->event_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionTree::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionTree_descriptor_;
  metadata.reflection = ActionTree_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionTree_Case

// required int32 var = 11;
bool ActionTree_Case::has_var() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActionTree_Case::set_has_var() {
  _has_bits_[0] |= 0x00000001u;
}
void ActionTree_Case::clear_has_var() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActionTree_Case::clear_var() {
  var_ = 0;
  clear_has_var();
}
 ::google::protobuf::int32 ActionTree_Case::var() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.Case.var)
  return var_;
}
 void ActionTree_Case::set_var(::google::protobuf::int32 value) {
  set_has_var();
  var_ = value;
  // @@protoc_insertion_point(field_set:previrt.proto.ActionTree.Case.var)
}

// required .previrt.proto.PrevirtType test = 12;
bool ActionTree_Case::has_test() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActionTree_Case::set_has_test() {
  _has_bits_[0] |= 0x00000002u;
}
void ActionTree_Case::clear_has_test() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActionTree_Case::clear_test() {
  if (test_ != NULL) test_->::previrt::proto::PrevirtType::Clear();
  clear_has_test();
}
const ::previrt::proto::PrevirtType& ActionTree_Case::test() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.Case.test)
  return test_ != NULL ? *test_ : *default_instance_->test_;
}
::previrt::proto::PrevirtType* ActionTree_Case::mutable_test() {
  set_has_test();
  if (test_ == NULL) {
    test_ = new ::previrt::proto::PrevirtType;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.ActionTree.Case.test)
  return test_;
}
::previrt::proto::PrevirtType* ActionTree_Case::release_test() {
  // @@protoc_insertion_point(field_release:previrt.proto.ActionTree.Case.test)
  clear_has_test();
  ::previrt::proto::PrevirtType* temp = test_;
  test_ = NULL;
  return temp;
}
void ActionTree_Case::set_allocated_test(::previrt::proto::PrevirtType* test) {
  delete test_;
  test_ = test;
  if (test) {
    set_has_test();
  } else {
    clear_has_test();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.ActionTree.Case.test)
}

// required .previrt.proto.ActionTree _then = 18;
bool ActionTree_Case::has__then() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActionTree_Case::set_has__then() {
  _has_bits_[0] |= 0x00000004u;
}
void ActionTree_Case::clear_has__then() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActionTree_Case::clear__then() {
  if (_then_ != NULL) _then_->::previrt::proto::ActionTree::Clear();
  clear_has__then();
}
const ::previrt::proto::ActionTree& ActionTree_Case::_then() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.Case._then)
  return _then_ != NULL ? *_then_ : *default_instance_->_then_;
}
::previrt::proto::ActionTree* ActionTree_Case::mutable__then() {
  set_has__then();
  if (_then_ == NULL) {
    _then_ = new ::previrt::proto::ActionTree;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.ActionTree.Case._then)
  return _then_;
}
::previrt::proto::ActionTree* ActionTree_Case::release__then() {
  // @@protoc_insertion_point(field_release:previrt.proto.ActionTree.Case._then)
  clear_has__then();
  ::previrt::proto::ActionTree* temp = _then_;
  _then_ = NULL;
  return temp;
}
void ActionTree_Case::set_allocated__then(::previrt::proto::ActionTree* _then) {
  delete _then_;
  _then_ = _then;
  if (_then) {
    set_has__then();
  } else {
    clear_has__then();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.ActionTree.Case._then)
}

// required .previrt.proto.ActionTree _else = 19;
bool ActionTree_Case::has__else() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ActionTree_Case::set_has__else() {
  _has_bits_[0] |= 0x00000008u;
}
void ActionTree_Case::clear_has__else() {
  _has_bits_[0] &= ~0x00000008u;
}
void ActionTree_Case::clear__else() {
  if (_else_ != NULL) _else_->::previrt::proto::ActionTree::Clear();
  clear_has__else();
}
const ::previrt::proto::ActionTree& ActionTree_Case::_else() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.Case._else)
  return _else_ != NULL ? *_else_ : *default_instance_->_else_;
}
::previrt::proto::ActionTree* ActionTree_Case::mutable__else() {
  set_has__else();
  if (_else_ == NULL) {
    _else_ = new ::previrt::proto::ActionTree;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.ActionTree.Case._else)
  return _else_;
}
::previrt::proto::ActionTree* ActionTree_Case::release__else() {
  // @@protoc_insertion_point(field_release:previrt.proto.ActionTree.Case._else)
  clear_has__else();
  ::previrt::proto::ActionTree* temp = _else_;
  _else_ = NULL;
  return temp;
}
void ActionTree_Case::set_allocated__else(::previrt::proto::ActionTree* _else) {
  delete _else_;
  _else_ = _else;
  if (_else) {
    set_has__else();
  } else {
    clear_has__else();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.ActionTree.Case._else)
}

// -------------------------------------------------------------------

// ActionTree_Forward

// -------------------------------------------------------------------

// ActionTree_Event

// optional bool exit = 31 [default = false];
bool ActionTree_Event::has_exit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActionTree_Event::set_has_exit() {
  _has_bits_[0] |= 0x00000001u;
}
void ActionTree_Event::clear_has_exit() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActionTree_Event::clear_exit() {
  exit_ = false;
  clear_has_exit();
}
 bool ActionTree_Event::exit() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.Event.exit)
  return exit_;
}
 void ActionTree_Event::set_exit(bool value) {
  set_has_exit();
  exit_ = value;
  // @@protoc_insertion_point(field_set:previrt.proto.ActionTree.Event.exit)
}

// optional bytes handler = 32;
bool ActionTree_Event::has_handler() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActionTree_Event::set_has_handler() {
  _has_bits_[0] |= 0x00000002u;
}
void ActionTree_Event::clear_has_handler() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActionTree_Event::clear_handler() {
  handler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_handler();
}
 const ::std::string& ActionTree_Event::handler() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.Event.handler)
  return handler_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ActionTree_Event::set_handler(const ::std::string& value) {
  set_has_handler();
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:previrt.proto.ActionTree.Event.handler)
}
 void ActionTree_Event::set_handler(const char* value) {
  set_has_handler();
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:previrt.proto.ActionTree.Event.handler)
}
 void ActionTree_Event::set_handler(const void* value, size_t size) {
  set_has_handler();
  handler_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:previrt.proto.ActionTree.Event.handler)
}
 ::std::string* ActionTree_Event::mutable_handler() {
  set_has_handler();
  // @@protoc_insertion_point(field_mutable:previrt.proto.ActionTree.Event.handler)
  return handler_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ActionTree_Event::release_handler() {
  // @@protoc_insertion_point(field_release:previrt.proto.ActionTree.Event.handler)
  clear_has_handler();
  return handler_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ActionTree_Event::set_allocated_handler(::std::string* handler) {
  if (handler != NULL) {
    set_has_handler();
  } else {
    clear_has_handler();
  }
  handler_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), handler);
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.ActionTree.Event.handler)
}

// repeated int32 args = 33;
int ActionTree_Event::args_size() const {
  return args_.size();
}
void ActionTree_Event::clear_args() {
  args_.Clear();
}
 ::google::protobuf::int32 ActionTree_Event::args(int index) const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.Event.args)
  return args_.Get(index);
}
 void ActionTree_Event::set_args(int index, ::google::protobuf::int32 value) {
  args_.Set(index, value);
  // @@protoc_insertion_point(field_set:previrt.proto.ActionTree.Event.args)
}
 void ActionTree_Event::add_args(::google::protobuf::int32 value) {
  args_.Add(value);
  // @@protoc_insertion_point(field_add:previrt.proto.ActionTree.Event.args)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ActionTree_Event::args() const {
  // @@protoc_insertion_point(field_list:previrt.proto.ActionTree.Event.args)
  return args_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ActionTree_Event::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:previrt.proto.ActionTree.Event.args)
  return &args_;
}

// optional .previrt.proto.ActionTree then = 39;
bool ActionTree_Event::has_then() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ActionTree_Event::set_has_then() {
  _has_bits_[0] |= 0x00000008u;
}
void ActionTree_Event::clear_has_then() {
  _has_bits_[0] &= ~0x00000008u;
}
void ActionTree_Event::clear_then() {
  if (then_ != NULL) then_->::previrt::proto::ActionTree::Clear();
  clear_has_then();
}
const ::previrt::proto::ActionTree& ActionTree_Event::then() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.Event.then)
  return then_ != NULL ? *then_ : *default_instance_->then_;
}
::previrt::proto::ActionTree* ActionTree_Event::mutable_then() {
  set_has_then();
  if (then_ == NULL) {
    then_ = new ::previrt::proto::ActionTree;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.ActionTree.Event.then)
  return then_;
}
::previrt::proto::ActionTree* ActionTree_Event::release_then() {
  // @@protoc_insertion_point(field_release:previrt.proto.ActionTree.Event.then)
  clear_has_then();
  ::previrt::proto::ActionTree* temp = then_;
  then_ = NULL;
  return temp;
}
void ActionTree_Event::set_allocated_then(::previrt::proto::ActionTree* then) {
  delete then_;
  then_ = then;
  if (then) {
    set_has_then();
  } else {
    clear_has_then();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.ActionTree.Event.then)
}

// -------------------------------------------------------------------

// ActionTree

// required .previrt.proto.ActionType type = 1;
bool ActionTree::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActionTree::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ActionTree::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActionTree::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::previrt::proto::ActionType ActionTree::type() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.type)
  return static_cast< ::previrt::proto::ActionType >(type_);
}
 void ActionTree::set_type(::previrt::proto::ActionType value) {
  assert(::previrt::proto::ActionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:previrt.proto.ActionTree.type)
}

// optional group Case = 10 { ... };
bool ActionTree::has_case_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActionTree::set_has_case_() {
  _has_bits_[0] |= 0x00000002u;
}
void ActionTree::clear_has_case_() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActionTree::clear_case_() {
  if (case__ != NULL) case__->::previrt::proto::ActionTree_Case::Clear();
  clear_has_case_();
}
const ::previrt::proto::ActionTree_Case& ActionTree::case_() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.case)
  return case__ != NULL ? *case__ : *default_instance_->case__;
}
::previrt::proto::ActionTree_Case* ActionTree::mutable_case_() {
  set_has_case_();
  if (case__ == NULL) {
    case__ = new ::previrt::proto::ActionTree_Case;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.ActionTree.case)
  return case__;
}
::previrt::proto::ActionTree_Case* ActionTree::release_case_() {
  // @@protoc_insertion_point(field_release:previrt.proto.ActionTree.case)
  clear_has_case_();
  ::previrt::proto::ActionTree_Case* temp = case__;
  case__ = NULL;
  return temp;
}
void ActionTree::set_allocated_case_(::previrt::proto::ActionTree_Case* case_) {
  delete case__;
  case__ = case_;
  if (case_) {
    set_has_case_();
  } else {
    clear_has_case_();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.ActionTree.case)
}

// optional group Forward = 20 { ... };
bool ActionTree::has_forward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActionTree::set_has_forward() {
  _has_bits_[0] |= 0x00000004u;
}
void ActionTree::clear_has_forward() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActionTree::clear_forward() {
  if (forward_ != NULL) forward_->::previrt::proto::ActionTree_Forward::Clear();
  clear_has_forward();
}
const ::previrt::proto::ActionTree_Forward& ActionTree::forward() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.forward)
  return forward_ != NULL ? *forward_ : *default_instance_->forward_;
}
::previrt::proto::ActionTree_Forward* ActionTree::mutable_forward() {
  set_has_forward();
  if (forward_ == NULL) {
    forward_ = new ::previrt::proto::ActionTree_Forward;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.ActionTree.forward)
  return forward_;
}
::previrt::proto::ActionTree_Forward* ActionTree::release_forward() {
  // @@protoc_insertion_point(field_release:previrt.proto.ActionTree.forward)
  clear_has_forward();
  ::previrt::proto::ActionTree_Forward* temp = forward_;
  forward_ = NULL;
  return temp;
}
void ActionTree::set_allocated_forward(::previrt::proto::ActionTree_Forward* forward) {
  delete forward_;
  forward_ = forward;
  if (forward) {
    set_has_forward();
  } else {
    clear_has_forward();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.ActionTree.forward)
}

// optional group Event = 30 { ... };
bool ActionTree::has_event() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ActionTree::set_has_event() {
  _has_bits_[0] |= 0x00000008u;
}
void ActionTree::clear_has_event() {
  _has_bits_[0] &= ~0x00000008u;
}
void ActionTree::clear_event() {
  if (event_ != NULL) event_->::previrt::proto::ActionTree_Event::Clear();
  clear_has_event();
}
const ::previrt::proto::ActionTree_Event& ActionTree::event() const {
  // @@protoc_insertion_point(field_get:previrt.proto.ActionTree.event)
  return event_ != NULL ? *event_ : *default_instance_->event_;
}
::previrt::proto::ActionTree_Event* ActionTree::mutable_event() {
  set_has_event();
  if (event_ == NULL) {
    event_ = new ::previrt::proto::ActionTree_Event;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.ActionTree.event)
  return event_;
}
::previrt::proto::ActionTree_Event* ActionTree::release_event() {
  // @@protoc_insertion_point(field_release:previrt.proto.ActionTree.event)
  clear_has_event();
  ::previrt::proto::ActionTree_Event* temp = event_;
  event_ = NULL;
  return temp;
}
void ActionTree::set_allocated_event(::previrt::proto::ActionTree_Event* event) {
  delete event_;
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.ActionTree.event)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnforceInterface_Functions::kNameFieldNumber;
const int EnforceInterface_Functions::kActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnforceInterface_Functions::EnforceInterface_Functions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.EnforceInterface.Functions)
}

void EnforceInterface_Functions::InitAsDefaultInstance() {
  actions_ = const_cast< ::previrt::proto::ActionTree*>(&::previrt::proto::ActionTree::default_instance());
}

EnforceInterface_Functions::EnforceInterface_Functions(const EnforceInterface_Functions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.EnforceInterface.Functions)
}

void EnforceInterface_Functions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnforceInterface_Functions::~EnforceInterface_Functions() {
  // @@protoc_insertion_point(destructor:previrt.proto.EnforceInterface.Functions)
  SharedDtor();
}

void EnforceInterface_Functions::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete actions_;
  }
}

void EnforceInterface_Functions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnforceInterface_Functions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnforceInterface_Functions_descriptor_;
}

const EnforceInterface_Functions& EnforceInterface_Functions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

EnforceInterface_Functions* EnforceInterface_Functions::default_instance_ = NULL;

EnforceInterface_Functions* EnforceInterface_Functions::New(::google::protobuf::Arena* arena) const {
  EnforceInterface_Functions* n = new EnforceInterface_Functions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnforceInterface_Functions::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.EnforceInterface.Functions)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_actions()) {
      if (actions_ != NULL) actions_->::previrt::proto::ActionTree::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnforceInterface_Functions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.EnforceInterface.Functions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_actions;
        break;
      }

      // required .previrt.proto.ActionTree actions = 3;
      case 3: {
        if (tag == 26) {
         parse_actions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_actions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.EnforceInterface.Functions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.EnforceInterface.Functions)
  return false;
#undef DO_
}

void EnforceInterface_Functions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.EnforceInterface.Functions)
  // required bytes name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // required .previrt.proto.ActionTree actions = 3;
  if (has_actions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->actions_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.EnforceInterface.Functions)
}

::google::protobuf::uint8* EnforceInterface_Functions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.EnforceInterface.Functions)
  // required bytes name = 2;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // required .previrt.proto.ActionTree actions = 3;
  if (has_actions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->actions_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.EnforceInterface.Functions)
  return target;
}

int EnforceInterface_Functions::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:previrt.proto.EnforceInterface.Functions)
  int total_size = 0;

  if (has_name()) {
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_actions()) {
    // required .previrt.proto.ActionTree actions = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->actions_);
  }

  return total_size;
}
int EnforceInterface_Functions::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.EnforceInterface.Functions)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required .previrt.proto.ActionTree actions = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->actions_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnforceInterface_Functions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.EnforceInterface.Functions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnforceInterface_Functions* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnforceInterface_Functions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.EnforceInterface.Functions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.EnforceInterface.Functions)
    MergeFrom(*source);
  }
}

void EnforceInterface_Functions::MergeFrom(const EnforceInterface_Functions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.EnforceInterface.Functions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_actions()) {
      mutable_actions()->::previrt::proto::ActionTree::MergeFrom(from.actions());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EnforceInterface_Functions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.EnforceInterface.Functions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnforceInterface_Functions::CopyFrom(const EnforceInterface_Functions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.EnforceInterface.Functions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnforceInterface_Functions::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_actions()) {
    if (!this->actions_->IsInitialized()) return false;
  }
  return true;
}

void EnforceInterface_Functions::Swap(EnforceInterface_Functions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnforceInterface_Functions::InternalSwap(EnforceInterface_Functions* other) {
  name_.Swap(&other->name_);
  std::swap(actions_, other->actions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnforceInterface_Functions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnforceInterface_Functions_descriptor_;
  metadata.reflection = EnforceInterface_Functions_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnforceInterface::kFunctionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnforceInterface::EnforceInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:previrt.proto.EnforceInterface)
}

void EnforceInterface::InitAsDefaultInstance() {
}

EnforceInterface::EnforceInterface(const EnforceInterface& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:previrt.proto.EnforceInterface)
}

void EnforceInterface::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnforceInterface::~EnforceInterface() {
  // @@protoc_insertion_point(destructor:previrt.proto.EnforceInterface)
  SharedDtor();
}

void EnforceInterface::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnforceInterface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnforceInterface::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnforceInterface_descriptor_;
}

const EnforceInterface& EnforceInterface::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Previrt_2eproto();
  return *default_instance_;
}

EnforceInterface* EnforceInterface::default_instance_ = NULL;

EnforceInterface* EnforceInterface::New(::google::protobuf::Arena* arena) const {
  EnforceInterface* n = new EnforceInterface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnforceInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:previrt.proto.EnforceInterface)
  functions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnforceInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:previrt.proto.EnforceInterface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated group Functions = 1 { ... };
      case 1: {
        if (tag == 11) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_functions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtualNoRecursionDepth(
                1, input, add_functions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(11)) goto parse_loop_functions;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:previrt.proto.EnforceInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:previrt.proto.EnforceInterface)
  return false;
#undef DO_
}

void EnforceInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:previrt.proto.EnforceInterface)
  // repeated group Functions = 1 { ... };
  for (unsigned int i = 0, n = this->functions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      1, this->functions(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:previrt.proto.EnforceInterface)
}

::google::protobuf::uint8* EnforceInterface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:previrt.proto.EnforceInterface)
  // repeated group Functions = 1 { ... };
  for (unsigned int i = 0, n = this->functions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupNoVirtualToArray(
        1, this->functions(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:previrt.proto.EnforceInterface)
  return target;
}

int EnforceInterface::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:previrt.proto.EnforceInterface)
  int total_size = 0;

  // repeated group Functions = 1 { ... };
  total_size += 2 * this->functions_size();
  for (int i = 0; i < this->functions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->functions(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnforceInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:previrt.proto.EnforceInterface)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnforceInterface* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnforceInterface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:previrt.proto.EnforceInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:previrt.proto.EnforceInterface)
    MergeFrom(*source);
  }
}

void EnforceInterface::MergeFrom(const EnforceInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:previrt.proto.EnforceInterface)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  functions_.MergeFrom(from.functions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EnforceInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:previrt.proto.EnforceInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnforceInterface::CopyFrom(const EnforceInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:previrt.proto.EnforceInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnforceInterface::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->functions())) return false;
  return true;
}

void EnforceInterface::Swap(EnforceInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnforceInterface::InternalSwap(EnforceInterface* other) {
  functions_.UnsafeArenaSwap(&other->functions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnforceInterface::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnforceInterface_descriptor_;
  metadata.reflection = EnforceInterface_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnforceInterface_Functions

// required bytes name = 2;
bool EnforceInterface_Functions::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnforceInterface_Functions::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void EnforceInterface_Functions::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnforceInterface_Functions::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& EnforceInterface_Functions::name() const {
  // @@protoc_insertion_point(field_get:previrt.proto.EnforceInterface.Functions.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnforceInterface_Functions::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:previrt.proto.EnforceInterface.Functions.name)
}
 void EnforceInterface_Functions::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:previrt.proto.EnforceInterface.Functions.name)
}
 void EnforceInterface_Functions::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:previrt.proto.EnforceInterface.Functions.name)
}
 ::std::string* EnforceInterface_Functions::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:previrt.proto.EnforceInterface.Functions.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EnforceInterface_Functions::release_name() {
  // @@protoc_insertion_point(field_release:previrt.proto.EnforceInterface.Functions.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnforceInterface_Functions::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.EnforceInterface.Functions.name)
}

// required .previrt.proto.ActionTree actions = 3;
bool EnforceInterface_Functions::has_actions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnforceInterface_Functions::set_has_actions() {
  _has_bits_[0] |= 0x00000002u;
}
void EnforceInterface_Functions::clear_has_actions() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnforceInterface_Functions::clear_actions() {
  if (actions_ != NULL) actions_->::previrt::proto::ActionTree::Clear();
  clear_has_actions();
}
const ::previrt::proto::ActionTree& EnforceInterface_Functions::actions() const {
  // @@protoc_insertion_point(field_get:previrt.proto.EnforceInterface.Functions.actions)
  return actions_ != NULL ? *actions_ : *default_instance_->actions_;
}
::previrt::proto::ActionTree* EnforceInterface_Functions::mutable_actions() {
  set_has_actions();
  if (actions_ == NULL) {
    actions_ = new ::previrt::proto::ActionTree;
  }
  // @@protoc_insertion_point(field_mutable:previrt.proto.EnforceInterface.Functions.actions)
  return actions_;
}
::previrt::proto::ActionTree* EnforceInterface_Functions::release_actions() {
  // @@protoc_insertion_point(field_release:previrt.proto.EnforceInterface.Functions.actions)
  clear_has_actions();
  ::previrt::proto::ActionTree* temp = actions_;
  actions_ = NULL;
  return temp;
}
void EnforceInterface_Functions::set_allocated_actions(::previrt::proto::ActionTree* actions) {
  delete actions_;
  actions_ = actions;
  if (actions) {
    set_has_actions();
  } else {
    clear_has_actions();
  }
  // @@protoc_insertion_point(field_set_allocated:previrt.proto.EnforceInterface.Functions.actions)
}

// -------------------------------------------------------------------

// EnforceInterface

// repeated group Functions = 1 { ... };
int EnforceInterface::functions_size() const {
  return functions_.size();
}
void EnforceInterface::clear_functions() {
  functions_.Clear();
}
const ::previrt::proto::EnforceInterface_Functions& EnforceInterface::functions(int index) const {
  // @@protoc_insertion_point(field_get:previrt.proto.EnforceInterface.functions)
  return functions_.Get(index);
}
::previrt::proto::EnforceInterface_Functions* EnforceInterface::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:previrt.proto.EnforceInterface.functions)
  return functions_.Mutable(index);
}
::previrt::proto::EnforceInterface_Functions* EnforceInterface::add_functions() {
  // @@protoc_insertion_point(field_add:previrt.proto.EnforceInterface.functions)
  return functions_.Add();
}
::google::protobuf::RepeatedPtrField< ::previrt::proto::EnforceInterface_Functions >*
EnforceInterface::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:previrt.proto.EnforceInterface.functions)
  return &functions_;
}
const ::google::protobuf::RepeatedPtrField< ::previrt::proto::EnforceInterface_Functions >&
EnforceInterface::functions() const {
  // @@protoc_insertion_point(field_list:previrt.proto.EnforceInterface.functions)
  return functions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace previrt

// @@protoc_insertion_point(global_scope)
